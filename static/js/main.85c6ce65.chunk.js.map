{"version":3,"sources":["hooks/OnBlock.js","hooks/Poller.js","hooks/Balance.js","hooks/ContractReader.js","waterwood.js","constants.js","helpers/Transactor.js","helpers/receiveBalance.js","helpers/sendBalance.js","helpers/receiveArray.js","helpers/receiveArrayNumberElement.js","hooks/ExternalContractLoader.js","hooks/LookupAddress.js","hooks/UserProvider.js","components/Account.jsx","components/Address.jsx","components/BytesStringInput.jsx","components/Contract/FunctionForm.jsx","components/Wallet.jsx","components/Loader.jsx","components/Swap.jsx","components/Timeline.jsx","components/BurnWOOD.jsx","components/LockWATER.jsx","components/UnlockWATER.jsx","components/ENABLE.jsx","components/GrowWOOD.jsx","components/MintWOOD.jsx","components/EcosystemInfo.jsx","components/TokenInfo.jsx","components/APYInfo.jsx","components/Multipliers.jsx","docs/CoreValues.js","docs/MintingBonuses.js","docs/DashboardOverview.js","docs/TokenSpecs.js","components/FooterContent.jsx","views/Dashboard.jsx","hooks/GasPrice.js","views/Home.jsx","views/Help.jsx","views/About.jsx","components/InnerContent.jsx","components/DownloadMetamask.jsx","components/LottieAnimation.jsx","components/DisplayLottie.jsx","App.jsx","index.jsx","contracts sync /^/.*/.abi/.js$","contracts sync /^/.*/.bytecode/.js$","contracts sync /^/.*/.address/.js$","contracts/YourContract.address.js","contracts/YourContract.abi.js","contracts/YourContract.bytecode.js","contracts/contracts.js"],"names":["useOnBlock","provider","fn","args","savedCallback","useRef","useEffect","current","listener","blockNumber","length","on","off","usePoller","delay","extraWatch","id","setInterval","clearInterval","useBalance","address","pollTime","useState","balance","setBalance","pollBalance","useCallback","a","getBalance","newBalance","useContractReader","contracts","contractName","functionName","formatter","onChange","adjustPollTime","value","setValue","setTimeout","bind","updateValue","newValue","console","log","WATER_ABI","WOOD1_ABI","STYLE","COLORCARD","MARGINCARD","top","bottom","STYLEHOME","INFURA_ID","NETWORKS","localhost","name","color","chainId","blockExplorer","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","price","gasPrice","matic","bsc","water_abi","water_address","wood_abi","wood_address","bsc2","bsctest","bsc2test","mumbai","callbacks","Transactor","etherscan","notifyScreen","tx","callback","signer","getSigner","getNetwork","network","options","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","hash","notify","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","indexOf","emitter","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","error","receiveBalance","parseInt","utils","require","sendBalance","parseEther","receiveArray","res","JSON","stringify","parse","receiveArrayNumberElement","e","hex","useExternalContractLoader","ABI","optionalBytecode","contract","setContract","listAccounts","accounts","customContract","Contract","bytecode","loadContract","lookupAddress","isAddress","reportedName","resolveName","resolvedAddress","getAddress","useLookupAddress","ensName","setEnsName","cache","localStorage","getItem","timestamp","Date","now","then","setItem","useUserProvider","injectedProvider","localProvider","useMemo","burnerConfig","pathname","rawPK","incomingPK","replace","privateKey","history","pushState","currentPrivateKey","connection","url","Web3Provider","BurnerProvider","networkName","_network","Account","ensProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","ens","displayAddress","substr","cachedProvider","push","key","style","verticalAlign","marginLeft","marginTop","shape","size","onClick","letterSpacing","type","Text","Typography","Address","props","text","etherscanLink","blockExplorerLink","minimized","target","href","rel","editable","copyable","paddingLeft","fontSize","constants","Paragraph","Loader","padding","margin","className","LoadingOutlined","Select","Option","BurnWOOD","_","WOODBalance","newInputValue","setInputValue","plain","display","width","src","isNaN","undefined","toFixed","toLocaleString","transform","defaultValue","placeholder","suffix","icon","FireFilled","disabled","CaretRightFilled","tx_without_notifications","customContractWOOD","connect","toString","includes","Math","floor","update","status","gasUsed","gas","parseFloat","strokeColor","percent","burnMultiplier","showInfo","LockWATER","WATERBalance","heigth","LockFilled","UnlockWATER","unLockedDays","lastMintBlockNumber","lastBlockNumber","firstLockInBlock","React","visible","setVisible","confirmLoading","lockedInWATER","title","onConfirm","okButtonProps","loading","onCancel","okText","UnlockFilled","marginBottom","from","to","timeMultiplier","ENABLE","PoweroffOutlined","customContractWATER","addressWOODContract","reload","GrowWOOD","MintWOOD","unMintedDays","WOODmintAmount","DollarCircleFilled","EcosystemInfo","globalBurnedamount","globalLockedamount","globalRatio","totalSupplyWOOD","totalSupplyWATER","ethereumProvider","TokenInfo","burnedWOOD","myRatio","APYInfo","yourAPY","priceWOOD","priceWATER","onexAPY","fiftyxAPY","Multipliers","totalMultiplier","CoreValues","onOk","footer","align","MintingBonuses","DashboardOverview","height","offset","once","resize","TokenSpecs","FooterContent","backgroundColor","textAlign","paddingTop","span","targetNetwork","StaticJsonRpcProvider","bscProvider","mainnetProvider","addressWATERContract","Web3Modal","cacheProvider","providerOptions","walletconnect","package","WalletConnectProvider","infuraId","clearCachedProvider","Dashboard","setInjectedProvider","speed","setGasPrice","loadGasPrice","axios","get","response","newGasPrice","data","catch","useGasPrice","userProvider","useUserAddress","localChainId","userChainId","yourLocalBalance","yourMainnetBalance","1","lockedAddressInfo","addressInfo","addressTokenInfo","isWOODOperator","priceBNB","networkDisplay","networkLocal","n","NETWORK","zIndex","position","right","closable","isChecked","setisChecked","isEnabled","setisEnabled","DownloadMetamask","ethereum","_chainId","_accounts","columns","dataIndex","render","feature","WATER","WOOD","Home","w","h","paddingBottom","fontWeight","CaretRightOutlined","content","trigger","maxWidth","DisplayLottie","pagination","dataSource","class","orientation","paddingRight","RiseOutlined","FallOutlined","Help","About","InnerContent","exact","path","LottieAnimation","lotti","defaultOptions","loop","autoplay","animationData","home","Header","Layout","Sider","Content","App","route","setRoute","marginResponsive","max","innerWidth","test","navigator","userAgent","isMobile","setIsMobile","menuWidth","setMenuWidth","isMobileMenuOpened","setIsMobileMenuOpened","setW","setH","addEventListener","avatar","subTitle","extra","MenuOutlined","cursor","theme","overflow","left","selectedKeys","mode","Item","HomeFilled","ControlFilled","InfoCircleFilled","marginRight","ReactDOM","document","getElementById","map","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.85c6ce65.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\r\n\r\n// helper hook to call a function regularly in time intervals\r\nconst DEBUG = false;\r\n\r\nexport default function useOnBlock(provider, fn, args) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n\r\n  // Turn on the listener if we have a function & a provider\r\n  useEffect(() => {\r\n    if (fn && provider) {\r\n      const listener = blockNumber => {\r\n        if (DEBUG) console.log(blockNumber, fn, args, provider.listeners());\r\n\r\n        if (args && args.length > 0) {\r\n          savedCallback.current(...args);\r\n        } else {\r\n          savedCallback.current();\r\n        }\r\n      };\r\n\r\n      provider.on(\"block\", listener);\r\n\r\n      return () => {\r\n        provider.off(\"block\", listener);\r\n      };\r\n    }\r\n  }, [provider]);\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\n// helper hook to call a function regularly in time intervals\r\n\r\nexport default function usePoller(fn, delay, extraWatch) {\r\n  const savedCallback = useRef();\r\n  // Remember the latest fn.\r\n  useEffect(() => {\r\n    savedCallback.current = fn;\r\n  }, [fn]);\r\n  // Set up the interval.\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      const id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n  // run at start too\r\n  useEffect(() => {\r\n    fn();\r\n  }, [extraWatch]);\r\n}\r\n","import { useCallback, useState } from \"react\";\r\nimport useOnBlock from \"./OnBlock\";\r\nimport usePoller from \"./Poller\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets your balance in ETH from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get balance corresponding to given address\r\n  - Change provider to access balance on different chains (ex. mainnetProvider)\r\n  - If no pollTime is passed, the balance will update on every new block\r\n*/\r\n\r\nconst DEBUG = false;\r\n\r\nexport default function useBalance(provider, address, pollTime = 0) {\r\n  const [balance, setBalance] = useState();\r\n\r\n  const pollBalance = useCallback(\r\n    async (provider, address) => {\r\n      if (provider && address) {\r\n        const newBalance = await provider.getBalance(address);\r\n        if (newBalance !== balance) {\r\n          setBalance(newBalance);\r\n        }\r\n      }\r\n    },\r\n    [provider, address],\r\n  );\r\n\r\n  // Only pass a provider to watch on a block if there is no pollTime\r\n  useOnBlock(pollTime === 0 && provider, () => {\r\n    if (provider && address && pollTime === 0) {\r\n      pollBalance(provider, address);\r\n    }\r\n  });\r\n\r\n  // Use a poller if a pollTime is provided\r\n  usePoller(\r\n    async () => {\r\n      if (provider && address && pollTime > 0) {\r\n        if (DEBUG) console.log(\"polling!\", address);\r\n        pollBalance();\r\n      }\r\n    },\r\n    pollTime,\r\n    provider && address,\r\n  );\r\n\r\n  return balance;\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport useOnBlock from \"./OnBlock\";\r\nimport usePoller from \"./Poller\";\r\n\r\nconst DEBUG = false;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to read values from contracts and keep track of them in the local React states\r\n\r\n  ~ How can I use? ~\r\n\r\n  const purpose = useContractReader(readContracts,\"YourContract\", \"purpose\")\r\n\r\n  ~ Features ~\r\n\r\n  - Provide readContracts by loading contracts (see more on ContractLoader.js)\r\n  - Specify the name of the contract, in this case it is \"YourContract\"\r\n  - Specify the name of the variable in the contract, in this case we keep track of \"purpose\" variable\r\n  - Pass an args array if the function requires\r\n  - Pass pollTime - if no pollTime is specified, the function will update on every new block\r\n*/\r\n\r\nexport default function useContractReader(contracts, contractName, functionName, args, pollTime, formatter, onChange) {\r\n  let adjustPollTime = 0;\r\n  if (pollTime) {\r\n    adjustPollTime = pollTime;\r\n  } else if (!pollTime && typeof args === \"number\") {\r\n    // it's okay to pass poll time as last argument without args for the call\r\n    adjustPollTime = args;\r\n  }\r\n\r\n  const [value, setValue] = useState();\r\n  useEffect(() => {\r\n    if (typeof onChange === \"function\") {\r\n      setTimeout(onChange.bind(this, value), 1);\r\n    }\r\n  }, [value, onChange]);\r\n\r\n  const updateValue = async () => {\r\n    try {\r\n      let newValue;\r\n      if (DEBUG) console.log(\"CALLING \", contractName, functionName, \"with args\", args);\r\n      if (args && args.length > 0) {\r\n        newValue = await contracts[contractName][functionName](...args);\r\n        if (DEBUG)\r\n          console.log(\"contractName\", contractName, \"functionName\", functionName, \"args\", args, \"RESULT:\", newValue);\r\n      } else {\r\n        newValue = await contracts[contractName][functionName]();\r\n      }\r\n      if (formatter && typeof formatter === \"function\") {\r\n        newValue = formatter(newValue);\r\n      }\r\n      // console.log(\"GOT VALUE\",newValue)\r\n      if (newValue !== value) {\r\n        setValue(newValue);\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // Only pass a provider to watch on a block if we have a contract and no PollTime\r\n  useOnBlock(contracts && contracts[contractName] && adjustPollTime === 0 && contracts[contractName].provider, () => {\r\n    if (contracts && contracts[contractName] && adjustPollTime === 0) {\r\n      updateValue();\r\n    }\r\n  });\r\n\r\n  // Use a poller if a pollTime is provided\r\n  usePoller(\r\n    async () => {\r\n      if (contracts && contracts[contractName] && adjustPollTime > 0) {\r\n        if (DEBUG) console.log(\"polling!\", contractName, functionName);\r\n        updateValue();\r\n      }\r\n    },\r\n    adjustPollTime,\r\n    contracts && contracts[contractName],\r\n  );\r\n\r\n  return value;\r\n}\r\n","// EXTERNAL CONTRACTS\r\n\r\nexport const WATER1_ADDRESS = \"0x3c73799db546e98f23f738ea0871b6ced71d873a\";\r\n\r\nexport const WOOD1_ADDRESS = \"0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c\";\r\n\r\nexport const WATER2_ADDRESS = \"0x259c27c162861145f5a24a49822c11d51430e785\";\r\n\r\nexport const WOOD2_ADDRESS = \"0x98e31a4da88016c427c7382fcebeecb9d32154c4\";\r\n\r\nexport const WATERTEST_ADDRESS = \"0x5bd45dc4107f0a915056448ad7cb40b955f1cade\";\r\n\r\nexport const WOODTEST_ADDRESS = \"0x9e940ee71a6AC0d70B2dEaa9383229523dC09F76\";\r\n\r\nexport const WATER_ABI = [{ \"inputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"AuthorizedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Burned\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Minted\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"RevokedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Sent\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"authorizeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"defaultOperators\", \"outputs\": [{ \"internalType\": \"address[]\", \"name\": \"\", \"type\": \"address[]\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"granularity\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"isOperatorFor\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorBurn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorSend\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"revokeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"send\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }];\r\n\r\nexport const WOOD1_ABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"token\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"startTimeReward\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"maxTimeReward\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"failsafeBlockDuration\", \"type\": \"uint256\" }], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"AuthorizedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Burned\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"BurnedToAddress\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"burnedamountIncrease\", \"type\": \"uint256\" }], \"name\": \"Locked\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"sourceAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"Minted\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Minted\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"RevokedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Sent\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"burnedamountDecrease\", \"type\": \"uint256\" }], \"name\": \"Unlocked\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"addressLocks\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"burnedamount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastMintBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"authorizeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"burnToAddress\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"defaultOperators\", \"outputs\": [{ \"internalType\": \"address[]\", \"name\": \"\", \"type\": \"address[]\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressBurnMultiplier\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressDetails\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressRatio\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressTimeMultiplier\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressTokenDetails\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getGlobalRatio\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }], \"name\": \"getMintAmount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"globalBurnedamount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"globalLockedamount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"granularity\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"isOperatorFor\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"lock\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sourceAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }], \"name\": \"mintToAddress\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorBurn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorSend\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"revokeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"send\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" }], \"name\": \"tokensReceived\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"unlock\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }];\r\n\r\nexport const WOOD2_ABI = [{ \"inputs\": [{ \"internalType\": \"address\", \"name\": \"token\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"startTimeReward\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"maxTimeReward\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"failsafeBlockDuration\", \"type\": \"uint256\" }], \"stateMutability\": \"nonpayable\", \"type\": \"constructor\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"owner\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Approval\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"AuthorizedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Burned\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"BurnedToAddress\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"burneWATERountIncrease\", \"type\": \"uint256\" }], \"name\": \"Locked\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"sourceAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"Minted\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Minted\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"RevokedOperator\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"indexed\": false, \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"Sent\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": true, \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"indexed\": true, \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"Transfer\", \"type\": \"event\" }, { \"anonymous\": false, \"inputs\": [{ \"indexed\": false, \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"indexed\": false, \"internalType\": \"uint256\", \"name\": \"burneWATERountDecrease\", \"type\": \"uint256\" }], \"name\": \"Unlocked\", \"type\": \"event\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"\", \"type\": \"address\" }], \"name\": \"addressLocks\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"burneWATERount\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"blockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"lastMintBlockNumber\", \"type\": \"uint256\" }, { \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }], \"name\": \"allowance\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"spender\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"value\", \"type\": \"uint256\" }], \"name\": \"approve\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"authorizeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"balanceOf\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"burn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"burnToAddress\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"decimals\", \"outputs\": [{ \"internalType\": \"uint8\", \"name\": \"\", \"type\": \"uint8\" }], \"stateMutability\": \"pure\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"defaultOperators\", \"outputs\": [{ \"internalType\": \"address[]\", \"name\": \"\", \"type\": \"address[]\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressBurnMultiplier\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressDetails\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressRatio\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressTimeMultiplier\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }], \"name\": \"getAddressTokenDetails\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }, { \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"getGlobalRatio\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }], \"name\": \"getMintAmount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"globalBurneWATERount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"globalLockeWATERount\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"granularity\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"tokenHolder\", \"type\": \"address\" }], \"name\": \"isOperatorFor\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"minterAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"lock\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sourceAddress\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"targetAddress\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"targetBlock\", \"type\": \"uint256\" }], \"name\": \"mintToAddress\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"name\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"account\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorBurn\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"sender\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"operatorData\", \"type\": \"bytes\" }], \"name\": \"operatorSend\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }], \"name\": \"revokeOperator\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"data\", \"type\": \"bytes\" }], \"name\": \"send\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"symbol\", \"outputs\": [{ \"internalType\": \"string\", \"name\": \"\", \"type\": \"string\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"operator\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"from\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"to\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }, { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" }, { \"internalType\": \"bytes\", \"name\": \"\", \"type\": \"bytes\" }], \"name\": \"tokensReceived\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"totalSupply\", \"outputs\": [{ \"internalType\": \"uint256\", \"name\": \"\", \"type\": \"uint256\" }], \"stateMutability\": \"view\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transfer\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [{ \"internalType\": \"address\", \"name\": \"holder\", \"type\": \"address\" }, { \"internalType\": \"address\", \"name\": \"recipient\", \"type\": \"address\" }, { \"internalType\": \"uint256\", \"name\": \"amount\", \"type\": \"uint256\" }], \"name\": \"transferFrom\", \"outputs\": [{ \"internalType\": \"bool\", \"name\": \"\", \"type\": \"bool\" }], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }, { \"inputs\": [], \"name\": \"unlock\", \"outputs\": [], \"stateMutability\": \"nonpayable\", \"type\": \"function\" }];\r\n\r\n// export const WATER2_ABI = WATER1_ABI;\r\n\r\n// export const WATERTEST_ABI = WATER1_ABI;\r\n\r\n// export const WOODTEST_ABI = WOOD1_ABI;\r\n\r\n\r\n\r\n// -----------------------------------------\r\n// export const WATER_ADDRESS = WATERTEST_ADDRESS;\r\n\r\n// export const WOOD_ADDRESS = WOODTEST_ADDRESS;\r\n\r\n// export const WATER_ABI = WATER1_ABI;\r\n\r\n// export const WOOD_ABI = WOOD1_ABI;\r\n\r\n\r\n\r\n","import { WATER_ABI, WOOD1_ABI, WOOD2_ABI, WATER1_ADDRESS, WOOD1_ADDRESS, WATER2_ADDRESS, WOOD2_ADDRESS, WATERTEST_ADDRESS, WOODTEST_ADDRESS } from \"./waterwood\";\r\n\r\nexport const STYLE = {\r\n  COLORCARD: [\r\n    \"#ffffff\",\r\n    \"#f9f9ff\",\r\n    \"#eaf4fd\",\r\n    \"#c0e8fa\",\r\n    \"#f1f7fc\",\r\n    \"#ecf5fc\",\r\n\r\n    ],\r\n\r\n  MARGINCARD: { top: 0, bottom: 27 }\r\n};\r\n\r\nexport const STYLEHOME = {\r\n  COLORCARD: [\r\n    \"#ffffff\",\r\n    \"#f9f9ff\",\r\n    \"#eaf4fd\",\r\n    \"#c0e8fa\",\r\n    \"#f1f7fc\",\r\n    \"#ecf5fc\",\r\n\r\n  ],\r\n\r\n  MARGINCARD: { top: 0, bottom: 27 }\r\n};\r\n\r\n// ETH INFURA_ID\r\nexport const INFURA_ID = \"0946db060fbe44c1aee67cedd11e5298\";\r\n\r\n// BSC MORALIS_ID\r\nexport const MORALIS_ID = \"57eb4483ff6d41c47b82ecb7\";\r\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\r\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\r\n\r\n// BLOCKNATIVE ID FOR Notify.js:\r\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\r\n\r\nexport const NETWORK = chainId => {\r\n  for (const n in NETWORKS) {\r\n    if (NETWORKS[n].chainId === chainId) {\r\n      return NETWORKS[n];\r\n    }\r\n  }\r\n};\r\n\r\nexport const NETWORKS = {\r\n  localhost: {\r\n    name: \"localhost\",\r\n    color: \"#666666\",\r\n    chainId: 31337,\r\n    blockExplorer: \"\",\r\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",//\"https://rpc.scaffoldeth.io:48544\",\r\n  },\r\n  mainnet: {\r\n    name: \"mainnet\",\r\n    color: \"#ff8b9e\",\r\n    chainId: 1,\r\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://etherscan.io/\",\r\n  },\r\n  kovan: {\r\n    name: \"kovan\",\r\n    color: \"#7003DD\",\r\n    chainId: 42,\r\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\r\n    blockExplorer: \"https://kovan.etherscan.io/\",\r\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\r\n  },\r\n  rinkeby: {\r\n    name: \"rinkeby\",\r\n    color: \"#e0d068\",\r\n    chainId: 4,\r\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\r\n    faucet: \"https://faucet.rinkeby.io/\",\r\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\r\n  },\r\n  ropsten: {\r\n    name: \"ropsten\",\r\n    color: \"#F60D09\",\r\n    chainId: 3,\r\n    faucet: \"https://faucet.ropsten.be/\",\r\n    blockExplorer: \"https://ropsten.etherscan.io/\",\r\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  goerli: {\r\n    name: \"goerli\",\r\n    color: \"#0975F6\",\r\n    chainId: 5,\r\n    faucet: \"https://goerli-faucet.slock.it/\",\r\n    blockExplorer: \"https://goerli.etherscan.io/\",\r\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\r\n  },\r\n  xdai: {\r\n    name: \"xdai\",\r\n    color: \"#48a9a6\",\r\n    chainId: 100,\r\n    price: 1,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://dai.poa.network\",\r\n    faucet: \"https://xdai-faucet.top/\",\r\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\r\n  },\r\n  matic: {\r\n    name: \"matic\",\r\n    color: \"#2bbdf7\",\r\n    chainId: 137,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mainnet.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://explorer-mainnet.maticvigil.com//\",\r\n  },\r\n  bsc: {\r\n    name: \"binance smart chain\",\r\n    color: \"#eee\",\r\n    chainId: 56,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://bsc-dataseed.binance.org\",\r\n    blockExplorer: \"https://bscscan.com/\",\r\n    water_abi: WATER_ABI,\r\n    water_address: WATER1_ADDRESS,\r\n    wood_abi: WOOD1_ABI,\r\n    wood_address: WOOD1_ADDRESS,\r\n  },\r\n  bsc2: {\r\n    name: \"binance smart chain\",\r\n    color: \"#ccc\",\r\n    chainId: 56,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://speedy-nodes-nyc.moralis.io/57eb4483ff6d41c47b82ecb7/bsc/mainnet\",\r\n    blockExplorer: \"https://bscscan.com/\",\r\n    water_abi: WATER_ABI,\r\n    water_address: WATER2_ADDRESS,\r\n    wood_abi: WOOD2_ABI,\r\n    wood_address: WOOD2_ADDRESS,\r\n  },\r\n  bsctest: {\r\n    name: \"bsc testnet\",\r\n    color: \"#eee\",\r\n    chainId: 97,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://data-seed-prebsc-1-s1.binance.org:8545\",\r\n    faucet: \"https://testnet.binance.org/faucet-smart\",\r\n    blockExplorer: \"https://testnet.bscscan.com/\",\r\n    water_abi: WATER_ABI,\r\n    water_address: WATERTEST_ADDRESS,\r\n    wood_abi: WOOD1_ABI,\r\n    wood_address: WOODTEST_ADDRESS,\r\n  },\r\n  bsc2test: {\r\n    name: \"bsc testnet\",\r\n    color: \"#ccc\",\r\n    chainId: 97,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://speedy-nodes-nyc.moralis.io/57eb4483ff6d41c47b82ecb7/bsc/testnet\",\r\n    faucet: \"https://testnet.binance.org/faucet-smart\",\r\n    blockExplorer: \"https://testnet.bscscan.com/\",\r\n    water_abi: WATER_ABI,\r\n    water_address: WATERTEST_ADDRESS,\r\n    wood_abi: WOOD1_ABI,\r\n    wood_address: WOODTEST_ADDRESS,\r\n  },\r\n  mumbai: {\r\n    name: \"mumbai\",\r\n    color: \"#92D9FA\",\r\n    chainId: 80001,\r\n    gasPrice: 1000000000,\r\n    rpcUrl: \"https://rpc-mumbai.maticvigil.com\",\r\n    faucet: \"https://faucet.matic.network/\",\r\n    blockExplorer: \"https://mumbai-explorer.matic.today/\",\r\n  },\r\n};\r\n","import { hexlify } from \"@ethersproject/bytes\";\r\nimport { parseUnits } from \"@ethersproject/units\";\r\nimport { notification } from \"antd\";\r\nimport Notify from \"bnc-notify\";\r\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\r\n\r\n// this should probably just be renamed to \"notifier\"\r\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\r\n// https://docs.blocknative.com/notify\r\nconst callbacks = {};\r\n\r\nconst DEBUG = 0\r\n\r\nexport default function Transactor(provider, gasPrice, etherscan, notifyScreen=true) {\r\n  if (typeof provider !== \"undefined\") {\r\n    // eslint-disable-next-line consistent-return\r\n    return async (tx, callback) => {\r\n      const signer = provider.getSigner();\r\n      const network = await provider.getNetwork();\r\n      console.log(\"network\", network);\r\n      const options = {\r\n        dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\r\n        system: \"ethereum\",\r\n        networkId: network.chainId,\r\n        // darkMode: Boolean, // (default: false)\r\n        transactionHandler: txInformation => {\r\n          if(DEBUG) console.log(\"HANDLE TX\", txInformation);\r\n          const possibleFunction = callbacks[txInformation.transaction.hash];\r\n          if (typeof possibleFunction === \"function\") {\r\n            possibleFunction(txInformation.transaction);\r\n          }\r\n        },\r\n      };\r\n      const notify = Notify(options);\r\n\r\n      let etherscanNetwork = \"\";\r\n      if (network.name && network.chainId > 1) {\r\n        etherscanNetwork = network.name + \".\";\r\n      }\r\n\r\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\r\n      if (network.chainId === 100) {\r\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\r\n      }\r\n\r\n      try {\r\n        let result;\r\n        if (tx instanceof Promise) {\r\n          if(DEBUG) console.log(\"AWAITING TX\", tx);\r\n          result = await tx;\r\n        } else {\r\n          if (!tx.gasPrice) {\r\n            tx.gasPrice = gasPrice || parseUnits(\"4.1\", \"gwei\");\r\n          }\r\n          if (!tx.gasLimit) {\r\n            tx.gasLimit = hexlify(120000);\r\n          }\r\n          if(DEBUG) console.log(\"RUNNING TX\", tx);\r\n          result = await signer.sendTransaction(tx);\r\n        }\r\n        if(DEBUG) console.log(\"RESULT:\", result);\r\n        // console.log(\"Notify\", notify);\r\n\r\n        if (callback) {\r\n          callbacks[result.hash] = callback;\r\n        }\r\n\r\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\r\n        if ([1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\r\n          const { emitter } = notify.hash(result.hash);\r\n          emitter.on(\"all\", transaction => {\r\n            return {\r\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\r\n            };\r\n          });\r\n        } else if (notifyScreen) {\r\n          notification.info({\r\n            message: \"Local Transaction Sent\",\r\n            description: result.hash,\r\n            placement: \"bottomRight\",\r\n          });\r\n          // on most networks BlockNative will update a transaction handler,\r\n          // but locally we will set an interval to listen...\r\n          if (callback) {\r\n            const txResult = await tx;\r\n            const listeningInterval = setInterval(async () => {\r\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\r\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\r\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\r\n                callback({ ...txResult, ...currentTransactionReceipt });\r\n                clearInterval(listeningInterval);\r\n              }\r\n            }, 500);\r\n          }\r\n        }\r\n        return result;\r\n      } catch (e) {\r\n        console.log(e);\r\n        console.log(\"Transaction Error:\", e.message);\r\n        if (notifyScreen) {notification.error({\r\n          message: \"Transaction Error\",\r\n          description: e.message,\r\n        });}\r\n        if (callback && typeof callback === \"function\") {\r\n          callback(e);\r\n        }\r\n      }\r\n    };\r\n  }\r\n}\r\n","export default function receiveBalance(balance) {\r\n  return parseInt(balance) / 10 ** 18;\r\n}\r\n\r\n","const { utils } = require(\"ethers\");\r\n\r\nexport default function sendBalance(balance) {\r\n  return utils.parseEther(balance);\r\n\r\n}\r\n\r\n","export default function receiveArray(res) {\r\n  const result = JSON.stringify(res);\r\n  if (result) { const array = JSON.parse(result); return array; }\r\n  else{return \"\"}\r\n}\r\n\r\n","import { receiveBalance } from \"./\";\r\n\r\nexport default function receiveArrayNumberElement(e,res) {\r\n  const result = JSON.stringify(res);\r\n  if (result) { const array = JSON.parse(result); return receiveBalance(array[e].hex); }\r\n  else{return \"\"}\r\n}\r\n\r\n","/* eslint-disable import/no-dynamic-require */\r\n/* eslint-disable global-require */\r\nimport { Contract } from \"@ethersproject/contracts\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n/*\r\n  when you want to load an existing contract using just the provider, address, and ABI\r\n*/\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Enables you to load an existing mainnet DAI contract using the provider, address and abi\r\n\r\n  ~ How can I use? ~\r\n\r\n  const mainnetDAIContract = useExternalContractLoader(mainnetProvider, DAI_ADDRESS, DAI_ABI)\r\n\r\n  ~ Features ~\r\n\r\n  - Specify mainnetProvider\r\n  - Specify DAI_ADDRESS and DAI_ABI, you can load/write them using constants.js\r\n*/\r\nexport default function useExternalContractLoader(provider, address, ABI, optionalBytecode) {\r\n  const [contract, setContract] = useState();\r\n  useEffect(() => {\r\n    async function loadContract() {\r\n      if (typeof provider !== \"undefined\" && address && ABI) {\r\n        try {\r\n          // we need to check to see if this provider has a signer or not\r\n          let signer;\r\n          const accounts = await provider.listAccounts();\r\n          if (accounts && accounts.length > 0) {\r\n            signer = provider.getSigner();\r\n          } else {\r\n            signer = provider;\r\n          }\r\n\r\n          const customContract = new Contract(address, ABI, signer);\r\n          if (optionalBytecode) customContract.bytecode = optionalBytecode;\r\n\r\n          setContract(customContract);\r\n        } catch (e) {\r\n          console.log(\"ERROR LOADING EXTERNAL CONTRACT AT \" + address + \" (check provider, address, and ABI)!!\", e);\r\n        }\r\n      }\r\n    }\r\n    loadContract();\r\n  }, [provider, address, ABI, optionalBytecode]);\r\n  return contract;\r\n}\r\n","import { getAddress, isAddress } from \"@ethersproject/address\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n// resolved if(name){} to not save \"\" into cache\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets ENS name from given address and provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const ensName = useLookupAddress(mainnetProvider, address);\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address and get ENS name corresponding to given address\r\n*/\r\n\r\nconst lookupAddress = async (provider, address) => {\r\n  if (isAddress(address)) {\r\n    // console.log(`looking up ${address}`)\r\n    try {\r\n      // Accuracy of reverse resolution is not enforced.\r\n      // We then manually ensure that the reported ens name resolves to address\r\n      const reportedName = await provider.lookupAddress(address);\r\n\r\n      const resolvedAddress = await provider.resolveName(reportedName);\r\n\r\n      if (getAddress(address) === getAddress(resolvedAddress)) {\r\n        return reportedName;\r\n      }\r\n      return getAddress(address);\r\n    } catch (e) {\r\n      return getAddress(address);\r\n    }\r\n  }\r\n  return 0;\r\n};\r\n\r\nconst useLookupAddress = (provider, address) => {\r\n  const [ensName, setEnsName] = useState(address);\r\n  // const [ensCache, setEnsCache] = useLocalStorage('ensCache_'+address); Writing directly due to sync issues\r\n\r\n  useEffect(() => {\r\n    let cache = window.localStorage.getItem(\"ensCache_\" + address);\r\n    cache = cache && JSON.parse(cache);\r\n\r\n    if (cache && cache.timestamp > Date.now()) {\r\n      setEnsName(cache.name);\r\n    } else if (provider) {\r\n      lookupAddress(provider, address).then(name => {\r\n        if (name) {\r\n          setEnsName(name);\r\n          window.localStorage.setItem(\r\n            \"ensCache_\" + address,\r\n            JSON.stringify({\r\n              timestamp: Date.now() + 360000,\r\n              name,\r\n            }),\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }, [provider, address, setEnsName]);\r\n\r\n  return ensName;\r\n};\r\n\r\nexport default useLookupAddress;\r\n","import { Web3Provider } from \"@ethersproject/providers\";\r\nimport BurnerProvider from \"burner-provider\";\r\nimport { useMemo } from \"react\";\r\nimport { INFURA_ID } from \"../constants\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Gets user provider\r\n\r\n  ~ How can I use? ~\r\n\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n\r\n  ~ Features ~\r\n\r\n  - Specify the injected provider from Metamask\r\n  - Specify the local provider\r\n  - Usage examples:\r\n    const address = useUserAddress(userProvider);\r\n    const tx = Transactor(userProvider, gasPrice)\r\n*/\r\n\r\nconst useUserProvider = (injectedProvider, localProvider) =>\r\n  useMemo(() => {\r\n    if (injectedProvider) {\r\n      console.log(\"🦊 Using injected provider\");\r\n      return injectedProvider;\r\n    }\r\n    if (!localProvider) return undefined;\r\n\r\n    const burnerConfig = {};\r\n\r\n    if (window.location.pathname) {\r\n      if (window.location.pathname.indexOf(\"/pk\") >= 0) {\r\n        const incomingPK = window.location.hash.replace(\"#\", \"\");\r\n        let rawPK;\r\n        if (incomingPK.length === 64 || incomingPK.length === 66) {\r\n          console.log(\"🔑 Incoming Private Key...\");\r\n          rawPK = incomingPK;\r\n          burnerConfig.privateKey = rawPK;\r\n          window.history.pushState({}, \"\", \"/\");\r\n          const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n          if (currentPrivateKey && currentPrivateKey !== rawPK) {\r\n            window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n          }\r\n          window.localStorage.setItem(\"metaPrivateKey\", rawPK);\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(\"🔥 Using burner provider\", burnerConfig);\r\n    if (localProvider.connection && localProvider.connection.url) {\r\n      burnerConfig.rpcUrl = localProvider.connection.url;\r\n      return new Web3Provider(new BurnerProvider(burnerConfig));\r\n    }\r\n    // eslint-disable-next-line no-underscore-dangle\r\n    const networkName = localProvider._network && localProvider._network.name;\r\n    burnerConfig.rpcUrl = `https://${networkName || \"mainnet\"}.infura.io/v3/${INFURA_ID}`;\r\n    return new Web3Provider(new BurnerProvider(burnerConfig));\r\n  }, [injectedProvider, localProvider]);\r\n\r\nexport default useUserProvider;\r\n","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an Address, Balance, and Wallet as one Account component,\r\n  also allows users to log in to existing accounts and log out\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Account\r\n    address={address}\r\n    localProvider={localProvider}\r\n    userProvider={userProvider}\r\n    mainnetProvider={mainnetProvider}\r\n    price={price}\r\n    web3Modal={web3Modal}\r\n    loadWeb3Modal={loadWeb3Modal}\r\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n    blockExplorer={blockExplorer}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide address={address} and get balance corresponding to the given address\r\n  - Provide localProvider={localProvider} to access balance on local network\r\n  - Provide userProvider={userProvider} to display a wallet\r\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide price={price} of ether and get your balance converted to dollars\r\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              to be able to log in/log out to/from existing accounts\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n*/\r\n\r\nexport default function Account({ address, ensProvider, web3Modal, loadWeb3Modal, logoutOfWeb3Modal }) {\r\n  const modalButtons = [];\r\n  const ens = useLookupAddress(ensProvider, address);\r\n  let displayAddress = address.substr(0, 6);//+\"...\"+address.substr(-4, 6);\r\n  const size = \"short\";\r\n\r\n  if (ens && ens.indexOf(\"0x\") < 0) {\r\n    displayAddress = ens;\r\n  } else if (size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n\r\n  if (web3Modal) {\r\n    if (web3Modal.cachedProvider) {\r\n      modalButtons.push(\r\n        <Button\r\n          // type=\"primary\"\r\n          key=\"logoutbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          onClick={logoutOfWeb3Modal}\r\n        >\r\n          <b style={{ letterSpacing:1}}>Logout {displayAddress}</b>\r\n        </Button>,\r\n      );\r\n    } else {\r\n      modalButtons.push(\r\n        <Button\r\n          type=\"primary\"\r\n          key=\"loginbutton\"\r\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n          shape=\"round\"\r\n          size=\"large\"\r\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\r\n          onClick={loadWeb3Modal}\r\n        >\r\n          <b style={{letterSpacing:1}}> connect wallet</b>\r\n        </Button>,\r\n      );\r\n    }\r\n  }\r\n\r\n  // const { currentTheme } = useThemeSwitcher();\r\n\r\n  // const display = minimized ? (\r\n  //   \"\"\r\n  // ) : (\r\n  //   <span>\r\n  //     {address ? (\r\n  //       <Address address={address} ensProvider={ensProvider} blockExplorer={blockExplorer} />\r\n  //     ) : (\r\n  //       \"Click CONNECT to connect to Waterwood\"\r\n  //     )}\r\n  //     <Balance address={address} provider={localProvider} price={price} />\r\n  //     <Wallet\r\n  //       address={address}\r\n  //       provider={userProvider}\r\n  //       ensProvider={ensProvider}\r\n  //       price={price}\r\n  //       color={\"#1890ff\"}\r\n  //     />\r\n  //   </span>\r\n  // );\r\n\r\n  return (\r\n    <div>\r\n      {/* {display} */}\r\n      {modalButtons}\r\n    </div>\r\n  );\r\n}\r\n","import { Skeleton, Typography } from \"antd\";\r\nimport React from \"react\";\r\n// import Blockies from \"react-blockies\";\r\n// import { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport { useLookupAddress } from \"../hooks\";\r\n\r\n// changed value={address} to address={address}\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays an address with a blockie image and option to copy address\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Address\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    blockExplorer={blockExplorer}\r\n    fontSize={fontSize}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\")\r\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\r\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\r\n  - Provide fontSize={fontSize} to change the size of address text\r\n*/\r\n\r\nconst { Text } = Typography;\r\n\r\nconst blockExplorerLink = (address, blockExplorer) =>\r\n  `${blockExplorer || \"https://bscscan.io/\"}${\"address/\"}${address}`;\r\n\r\nexport default function Address(props) {\r\n  const address = props.value || props.address;\r\n\r\n  const ens = useLookupAddress(props.ensProvider, address);\r\n\r\n  // const { currentTheme } = useThemeSwitcher();\r\n\r\n  if (!address) {\r\n    return (\r\n      <span>\r\n        <b> Please connect your wallet</b>\r\n       {/* <Skeleton avatar paragraph={{ rows: 0 }} /> */}\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let displayAddress = address.substr(0, 6);//+\"...\"+address.substr(-4, 6);\r\n\r\n  if (ens && ens.indexOf(\"0x\") < 0) {\r\n    displayAddress = ens;\r\n  } else if (props.size === \"short\") {\r\n    displayAddress += \"...\" + address.substr(-4);\r\n  } else if (props.size === \"long\") {\r\n    displayAddress = address;\r\n  }\r\n\r\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\r\n  if (props.minimized) {\r\n    return (\r\n      <span style={{ verticalAlign: \"bottom\" }}>\r\n        <a\r\n          style={{ color: \"#222222\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {/* <Blockies seed={address.toLowerCase()} size={8} scale={2} /> */}\r\n        </a>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  let text;\r\n  if (props.onChange) {\r\n    text = (\r\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: \"#222222\" }}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  } else {\r\n    text = (\r\n      <Text copyable={{ text: address }}>\r\n        <a\r\n          style={{ color: \"#222222\"}}\r\n          target=\"_blank\"\r\n          href={etherscanLink}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {displayAddress}\r\n        </a>\r\n      </Text>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      <span style={{ verticalAlign: \"bottom\" }}>\r\n        {/* <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} /> */}\r\n      </span>\r\n      <span style={{ verticalAlign: \"bottom\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\r\n        {text}\r\n      </span>\r\n    </span>\r\n  );\r\n}\r\n","import { Input } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst { utils, constants } = require(\"ethers\");\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays input field with options to convert between STRING and BYTES32\r\n\r\n  ~ How can I use? ~\r\n\r\n  <BytesStringInput\r\n    autofocus\r\n    value={\"scaffold-eth\"}\r\n    placeholder=\"Enter value...\"\r\n    onChange={value => {\r\n      setValue(value);\r\n    }}\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide value={value} to specify initial string\r\n  - Provide placeholder=\"Enter value...\" value for the input\r\n  - Control input change by onChange={value => { setValue(value);}}\r\n\r\n*/\r\n\r\nexport default function BytesStringInput(props) {\r\n  const [mode, setMode] = useState(\"STRING\");\r\n  const [display, setDisplay] = useState();\r\n  const [value, setValue] = useState(constants.HashZero);\r\n\r\n  // current value is the value in bytes32\r\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\r\n\r\n  const option = title => {\r\n    return (\r\n      <div\r\n        style={{ cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          if (mode === \"STRING\") {\r\n            setMode(\"BYTES32\");\r\n            if (!utils.isHexString(currentValue)) {\r\n              /* in case user enters invalid bytes32 number,\r\n                   it considers it as string and converts to bytes32 */\r\n              const changedValue = utils.formatBytes32String(currentValue);\r\n              setDisplay(changedValue);\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          } else {\r\n            setMode(\"STRING\");\r\n            if (currentValue && utils.isHexString(currentValue)) {\r\n              setDisplay(utils.parseBytes32String(currentValue));\r\n            } else {\r\n              setDisplay(currentValue);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        {title}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  let addonAfter;\r\n  if (mode === \"STRING\") {\r\n    addonAfter = option(\"STRING 🔀\");\r\n  } else {\r\n    addonAfter = option(\"BYTES32 🔀\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!currentValue) {\r\n      setDisplay(\"\");\r\n    }\r\n  }, [currentValue]);\r\n\r\n  return (\r\n    <Input\r\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\r\n      autoFocus={props.autoFocus}\r\n      value={display}\r\n      addonAfter={addonAfter}\r\n      onChange={async e => {\r\n        const newValue = e.target.value;\r\n        if (mode === \"STRING\") {\r\n          // const ethValue = parseFloat(newValue) / props.price;\r\n          // setValue(ethValue);\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(utils.formatBytes32String(newValue));\r\n          }\r\n          setValue(utils.formatBytes32String(newValue));\r\n          setDisplay(newValue);\r\n        } else {\r\n          if (typeof props.onChange === \"function\") {\r\n            props.onChange(newValue);\r\n          }\r\n          setValue(newValue);\r\n          setDisplay(newValue);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport { BigNumber } from \"@ethersproject/bignumber\";\r\nimport { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport Blockies from \"react-blockies\";\r\nimport { Transactor } from \"../../helpers\";\r\nimport tryToDisplay from \"./utils\";\r\n\r\nconst { utils } = require(\"ethers\");\r\n\r\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\r\n  const [form, setForm] = useState({});\r\n  const [txValue, setTxValue] = useState();\r\n  const [returnValue, setReturnValue] = useState();\r\n\r\n  const tx = Transactor(provider, gasPrice);\r\n\r\n  let inputIndex = 0;\r\n  const inputs = functionInfo.inputs.map(input => {\r\n    const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + inputIndex++;\r\n\r\n    let buttons = \"\";\r\n    if (input.type === \"bytes32\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to bytes32\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.parseBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.formatBytes32String(form[key]);\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"bytes\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"to hex\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              if (utils.isHexString(form[key])) {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.toUtf8String(form[key]);\r\n                setForm(formUpdate);\r\n              } else {\r\n                const formUpdate = { ...form };\r\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\r\n                setForm(formUpdate);\r\n              }\r\n            }}\r\n          >\r\n            #️⃣\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"uint256\") {\r\n      buttons = (\r\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\r\n          <div\r\n            type=\"dashed\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={async () => {\r\n              const formUpdate = { ...form };\r\n              formUpdate[key] = utils.parseEther(form[key]);\r\n              setForm(formUpdate);\r\n            }}\r\n          >\r\n            ✴️\r\n          </div>\r\n        </Tooltip>\r\n      );\r\n    } else if (input.type === \"address\") {\r\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\r\n      if (possibleAddress && possibleAddress.length === 42) {\r\n        buttons = (\r\n          <Tooltip placement=\"right\" title=\"blockie\">\r\n            <Blockies seed={possibleAddress} scale={3} />\r\n          </Tooltip>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div style={{ margin: 2 }} key={key}>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\r\n          autoComplete=\"off\"\r\n          value={form[key]}\r\n          name={key}\r\n          onChange={event => {\r\n            const formUpdate = { ...form };\r\n            formUpdate[event.target.name] = event.target.value;\r\n            setForm(formUpdate);\r\n          }}\r\n          suffix={buttons}\r\n        />\r\n      </div>\r\n    );\r\n  });\r\n\r\n  const txValueInput = (\r\n    <div style={{ margin: 2 }} key=\"txValueInput\">\r\n      <Input\r\n        placeholder=\"transaction value\"\r\n        onChange={e => setTxValue(e.target.value)}\r\n        value={txValue}\r\n        addonAfter={\r\n          <div>\r\n            <Row>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      const floatValue = parseFloat(txValue);\r\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\r\n                    }}\r\n                  >\r\n                    ✳️\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n              <Col span={16}>\r\n                <Tooltip placement=\"right\" title=\"number to hex\">\r\n                  <div\r\n                    type=\"dashed\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={async () => {\r\n                      setTxValue(BigNumber.from(txValue).toHexString());\r\n                    }}\r\n                  >\r\n                    #️⃣\r\n                  </div>\r\n                </Tooltip>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n\r\n  if (functionInfo.payable) {\r\n    inputs.push(txValueInput);\r\n  }\r\n\r\n  const buttonIcon =\r\n    functionInfo.type === \"call\" ? (\r\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\r\n    ) : (\r\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\r\n    );\r\n  inputs.push(\r\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\r\n      <Input\r\n        onChange={e => setReturnValue(e.target.value)}\r\n        defaultValue=\"\"\r\n        bordered={false}\r\n        disabled\r\n        value={returnValue}\r\n        suffix={\r\n          <div\r\n            style={{ width: 50, height: 30, margin: 0 }}\r\n            type=\"default\"\r\n            onClick={async () => {\r\n              let innerIndex = 0;\r\n              const args = functionInfo.inputs.map(input => {\r\n                const key = functionInfo.name + \"_\" + input.name + \"_\" + input.type + \"_\" + innerIndex++;\r\n                let value = form[key];\r\n                if (input.baseType === \"array\") {\r\n                  value = JSON.parse(value);\r\n                } else if (input.type === \"bool\") {\r\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\r\n                    value = 1;\r\n                  } else {\r\n                    value = 0;\r\n                  }\r\n                }\r\n                return value;\r\n              });\r\n\r\n              let result;\r\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\r\n                const returned = await contractFunction(...args);\r\n                result = tryToDisplay(returned);\r\n              } else {\r\n                const overrides = {};\r\n                if (txValue) {\r\n                  overrides.value = txValue; // ethers.utils.parseEther()\r\n                }\r\n                // Uncomment this if you want to skip the gas estimation for each transaction\r\n                // overrides.gasLimit = hexlify(1200000);\r\n\r\n                // console.log(\"Running with extras\",extras)\r\n                const returned = await tx(contractFunction(...args, overrides));\r\n                result = tryToDisplay(returned);\r\n              }\r\n\r\n              console.log(\"SETTING RESULT:\", result);\r\n              setReturnValue(result);\r\n              triggerRefresh(true);\r\n            }}\r\n          >\r\n            {buttonIcon}\r\n          </div>\r\n        }\r\n      />\r\n    </div>,\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col\r\n          span={8}\r\n          style={{\r\n            textAlign: \"right\",\r\n            opacity: 0.333,\r\n            paddingRight: 6,\r\n            fontSize: 24,\r\n          }}\r\n        >\r\n          {functionInfo.name}\r\n        </Col>\r\n        <Col span={16}>{inputs}</Col>\r\n      </Row>\r\n      <Divider />\r\n    </div>\r\n  );\r\n}\r\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\r\nimport { parseEther } from \"@ethersproject/units\";\r\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport { ethers } from \"ethers\";\r\nimport QR from \"qrcode.react\";\r\nimport React, { useState } from \"react\";\r\nimport { Transactor } from \"../helpers\";\r\nimport Address from \"./Address\";\r\nimport AddressInput from \"./AddressInput\";\r\nimport Balance from \"./Balance\";\r\nimport EtherInput from \"./EtherInput\";\r\n\r\nconst { Text, Paragraph } = Typography;\r\n\r\n/*\r\n  ~ What it does? ~\r\n\r\n  Displays a wallet where you can specify address and send USD/ETH, with options to\r\n  scan address, to convert between USD and ETH, to see and generate private keys,\r\n  to send, receive and extract the burner wallet\r\n\r\n  ~ How can I use? ~\r\n\r\n  <Wallet\r\n    provider={userProvider}\r\n    address={address}\r\n    ensProvider={mainnetProvider}\r\n    price={price}\r\n    color='red'\r\n  />\r\n\r\n  ~ Features ~\r\n\r\n  - Provide provider={userProvider} to display a wallet\r\n  - Provide address={address} if you want to specify address, otherwise\r\n                                                    your default address will be used\r\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\r\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\r\n  - Provide price={price} of ether and easily convert between USD and ETH\r\n  - Provide color to specify the color of wallet icon\r\n*/\r\n\r\nexport default function Wallet(props) {\r\n  const signerAddress = useUserAddress(props.provider);\r\n  const selectedAddress = props.address || signerAddress;\r\n\r\n  const [open, setOpen] = useState();\r\n  const [qr, setQr] = useState();\r\n  const [amount, setAmount] = useState();\r\n  const [toAddress, setToAddress] = useState();\r\n  const [pk, setPK] = useState();\r\n\r\n  const providerSend = props.provider ? (\r\n    <Tooltip title=\"Wallet\">\r\n      <WalletOutlined\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        rotate={-90}\r\n        style={{\r\n          padding: 7,\r\n          color: props.color ? props.color : \"\",\r\n          cursor: \"pointer\",\r\n          fontSize: 28,\r\n          verticalAlign: \"middle\",\r\n        }}\r\n      />\r\n    </Tooltip>\r\n  ) : (\r\n    \"\"\r\n  );\r\n\r\n  let display;\r\n  let receiveButton;\r\n  let privateKeyButton;\r\n  if (qr) {\r\n    display = (\r\n      <div>\r\n        <div>\r\n          <Text copyable>{selectedAddress}</Text>\r\n        </div>\r\n        <QR\r\n          value={selectedAddress}\r\n          size=\"450\"\r\n          level=\"H\"\r\n          includeMargin\r\n          renderAs=\"svg\"\r\n          imageSettings={{ excavate: false }}\r\n        />\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Hide\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  } else if (pk) {\r\n    const pk = localStorage.getItem(\"metaPrivateKey\");\r\n    const wallet = new ethers.Wallet(pk);\r\n\r\n    if (wallet.address !== selectedAddress) {\r\n      display = (\r\n        <div>\r\n          <b>*injected account*, private key unknown</b>\r\n        </div>\r\n      );\r\n    } else {\r\n      const extraPkDisplayAdded = {};\r\n      const extraPkDisplay = [];\r\n      extraPkDisplayAdded[wallet.address] = true;\r\n      extraPkDisplay.push(\r\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\r\n          <a href={\"/pk#\" + pk}>\r\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\r\n          </a>\r\n        </div>,\r\n      );\r\n      for (const key in localStorage) {\r\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\r\n          console.log(key);\r\n          const pastpk = localStorage.getItem(key);\r\n          const pastwallet = new ethers.Wallet(pastpk);\r\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\r\n            extraPkDisplayAdded[pastwallet.address] = true;\r\n            extraPkDisplay.push(\r\n              <div style={{ fontSize: 16 }}>\r\n                <a href={\"/pk#\" + pastpk}>\r\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\r\n                  {pastwallet.address.substr(0, 6)}\r\n                </a>\r\n              </div>,\r\n            );\r\n          }\r\n        }\r\n      }\r\n\r\n      display = (\r\n        <div>\r\n          <b>Private Key:</b>\r\n\r\n          <div>\r\n            <Text copyable>{pk}</Text>\r\n          </div>\r\n\r\n          <hr />\r\n\r\n          <i>\r\n            Point your camera phone at qr code to open in\r\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\r\n              burner wallet\r\n            </a>\r\n            :\r\n          </i>\r\n          <QR\r\n            value={\"https://xdai.io/\" + pk}\r\n            size=\"450\"\r\n            level=\"H\"\r\n            includeMargin\r\n            renderAs=\"svg\"\r\n            imageSettings={{ excavate: false }}\r\n          />\r\n\r\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\r\n            {\"https://xdai.io/\" + pk}\r\n          </Paragraph>\r\n\r\n          {extraPkDisplay ? (\r\n            <div>\r\n              <h3>Known Private Keys:</h3>\r\n              {extraPkDisplay}\r\n              <Button\r\n                onClick={() => {\r\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\r\n                  if (currentPrivateKey) {\r\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\r\n                  }\r\n                  const randomWallet = ethers.Wallet.createRandom();\r\n                  const privateKey = randomWallet._signingKey().privateKey;\r\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\r\n                  window.location.reload();\r\n                }}\r\n              >\r\n                Generate\r\n              </Button>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(\"\");\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Hide\r\n      </Button>\r\n    );\r\n  } else {\r\n    const inputStyle = {\r\n      padding: 10,\r\n    };\r\n\r\n    display = (\r\n      <div>\r\n        <div style={inputStyle}>\r\n          <AddressInput\r\n            autoFocus\r\n            ensProvider={props.ensProvider}\r\n            placeholder=\"to address\"\r\n            address={toAddress}\r\n            onChange={setToAddress}\r\n          />\r\n        </div>\r\n        <div style={inputStyle}>\r\n          <EtherInput\r\n            price={props.price}\r\n            value={amount}\r\n            onChange={value => {\r\n              setAmount(value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n    receiveButton = (\r\n      <Button\r\n        key=\"receive\"\r\n        onClick={() => {\r\n          setQr(selectedAddress);\r\n          setPK(\"\");\r\n        }}\r\n      >\r\n        <QrcodeOutlined /> Receive\r\n      </Button>\r\n    );\r\n    privateKeyButton = (\r\n      <Button\r\n        key=\"hide\"\r\n        onClick={() => {\r\n          setPK(selectedAddress);\r\n          setQr(\"\");\r\n        }}\r\n      >\r\n        <KeyOutlined /> Private Key\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <span>\r\n      {providerSend}\r\n      <Modal\r\n        visible={open}\r\n        title={\r\n          <div>\r\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\r\n            <div style={{ float: \"right\", paddingRight: 25 }}>\r\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\r\n            </div>\r\n          </div>\r\n        }\r\n        onOk={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        onCancel={() => {\r\n          setQr();\r\n          setPK();\r\n          setOpen(!open);\r\n        }}\r\n        footer={[\r\n          privateKeyButton,\r\n          receiveButton,\r\n          <Button\r\n            key=\"submit\"\r\n            type=\"primary\"\r\n            disabled={!amount || !toAddress || qr}\r\n            loading={false}\r\n            onClick={() => {\r\n              const tx = Transactor(props.provider);\r\n\r\n              let value;\r\n              try {\r\n                value = parseEther(\"\" + amount);\r\n              } catch (e) {\r\n                // failed to parseEther, try something else\r\n                value = parseEther(\"\" + parseFloat(amount).toFixed(8));\r\n              }\r\n\r\n              tx({\r\n                to: toAddress,\r\n                value,\r\n              });\r\n              setOpen(!open);\r\n              setQr();\r\n            }}\r\n          >\r\n            <SendOutlined /> Send\r\n          </Button>,\r\n        ]}\r\n      >\r\n        {display}\r\n      </Modal>\r\n    </span>\r\n  );\r\n}\r\n","import { Card } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\n\r\nexport default function Loader() {\r\n  return (\r\n    <Card >\r\n      <div style={{ padding: 16, margin: \"auto\", margin: 64 }}>\r\n        <div className=\"icons-list\">\r\n          <LoadingOutlined />\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\r\nimport { formatUnits, parseUnits } from \"@ethersproject/units\";\r\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\r\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Descriptions,\r\n  Divider,\r\n  Drawer,\r\n  InputNumber,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Space,\r\n  Tooltip,\r\n  Typography,\r\n} from \"antd\";\r\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\r\nimport { ethers } from \"ethers\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDebounce } from \"../hooks\";\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\r\n\r\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\r\n\r\nconst erc20Abi = [\r\n  \"function balanceOf(address owner) view returns (uint256)\",\r\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\r\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\r\n];\r\n\r\nconst makeCall = async (callName, contract, args, metadata = {}) => {\r\n  if (contract[callName]) {\r\n    let result;\r\n    if (args) {\r\n      result = await contract[callName](...args, metadata);\r\n    } else {\r\n      result = await contract[callName]();\r\n    }\r\n    return result;\r\n  }\r\n  console.log(\"no call of that name!\");\r\n};\r\n\r\nconst defaultToken = \"ETH\";\r\nconst defaultTokenOut = \"DAI\";\r\nconst defaultSlippage = \"0.5\";\r\nconst defaultTimeLimit = 60 * 10;\r\n\r\nconst tokenListToObject = array =>\r\n  array.reduce((obj, item) => {\r\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\r\n    return obj;\r\n  }, {});\r\n\r\nfunction Swap({ selectedProvider, tokenListURI }) {\r\n  const [tokenIn, setTokenIn] = useState(defaultToken);\r\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\r\n  const [exact, setExact] = useState();\r\n  const [amountIn, setAmountIn] = useState();\r\n  const [amountInMax, setAmountInMax] = useState();\r\n  const [amountOut, setAmountOut] = useState();\r\n  const [amountOutMin, setAmountOutMin] = useState();\r\n  const [trades, setTrades] = useState();\r\n  const [routerAllowance, setRouterAllowance] = useState();\r\n  const [balanceIn, setBalanceIn] = useState();\r\n  const [balanceOut, setBalanceOut] = useState();\r\n  const [slippageTolerance, setSlippageTolerance] = useState(\r\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\r\n  );\r\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\r\n  const [swapping, setSwapping] = useState(false);\r\n  const [approving, setApproving] = useState(false);\r\n  const [settingsVisible, setSettingsVisible] = useState(false);\r\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\r\n\r\n  const [tokenList, setTokenList] = useState([]);\r\n\r\n  const [tokens, setTokens] = useState();\r\n\r\n  const [invertPrice, setInvertPrice] = useState(false);\r\n\r\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\r\n\r\n  const signer = selectedProvider.getSigner();\r\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\r\n\r\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\r\n\r\n  const debouncedAmountIn = useDebounce(amountIn, 500);\r\n  const debouncedAmountOut = useDebounce(amountOut, 500);\r\n\r\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\r\n\r\n  useEffect(() => {\r\n    const getTokenList = async () => {\r\n      console.log(_tokenListUri);\r\n      try {\r\n        const tokenList = await fetch(_tokenListUri);\r\n        const tokenListJson = await tokenList.json();\r\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\r\n          return t.chainId === activeChainId;\r\n        });\r\n        const ethToken = WETH[activeChainId];\r\n        ethToken.name = \"Ethereum\";\r\n        ethToken.symbol = \"ETH\";\r\n        ethToken.logoURI =\r\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\r\n        const _tokenList = [ethToken, ...filteredTokens];\r\n        setTokenList(_tokenList);\r\n        const _tokens = tokenListToObject(_tokenList);\r\n        setTokens(_tokens);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getTokenList();\r\n  }, [tokenListURI]);\r\n\r\n  const getTrades = async () => {\r\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\r\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\r\n\r\n      const baseTokens = tokenList\r\n        .filter(function (t) {\r\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\r\n        })\r\n        .map(el => {\r\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\r\n        });\r\n\r\n      const listOfPairwiseTokens = pairs(baseTokens);\r\n\r\n      const getPairs = async list => {\r\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\r\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\r\n      };\r\n\r\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\r\n\r\n      let bestTrade;\r\n\r\n      if (exact === \"in\") {\r\n        setAmountInMax();\r\n        bestTrade = Trade.bestTradeExactIn(\r\n          listOfPairs.filter(item => item),\r\n          new TokenAmount(tokens[tokenIn], parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\r\n          tokens[tokenOut],\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountOut();\r\n        }\r\n      } else if (exact === \"out\") {\r\n        setAmountOutMin();\r\n        bestTrade = Trade.bestTradeExactOut(\r\n          listOfPairs.filter(item => item),\r\n          tokens[tokenIn],\r\n          new TokenAmount(tokens[tokenOut], parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\r\n          { maxNumResults: 3, maxHops: 1 },\r\n        );\r\n        if (bestTrade[0]) {\r\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\r\n        } else {\r\n          setAmountIn();\r\n        }\r\n      }\r\n\r\n      setTrades(bestTrade);\r\n\r\n      console.log(bestTrade);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTrades();\r\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (trades && trades[0]) {\r\n      if (exact === \"in\") {\r\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\r\n      } else if (exact === \"out\") {\r\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\r\n      }\r\n    }\r\n  }, [slippageTolerance, amountIn, amountOut, trades]);\r\n\r\n  const getBalance = async (_token, _account, _contract) => {\r\n    let newBalance;\r\n    if (_token === \"ETH\") {\r\n      newBalance = await selectedProvider.getBalance(_account);\r\n    } else {\r\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\r\n    }\r\n    return newBalance;\r\n  };\r\n\r\n  const getAccountInfo = async () => {\r\n    if (tokens) {\r\n      const accountList = await selectedProvider.listAccounts();\r\n\r\n      if (tokenIn) {\r\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\r\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\r\n        setBalanceIn(newBalanceIn);\r\n\r\n        let allowance;\r\n\r\n        if (tokenIn === \"ETH\") {\r\n          setRouterAllowance();\r\n        } else {\r\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\r\n          setRouterAllowance(allowance);\r\n        }\r\n      }\r\n\r\n      if (tokenOut) {\r\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\r\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\r\n        setBalanceOut(newBalanceOut);\r\n      }\r\n    }\r\n  };\r\n\r\n  usePoller(getAccountInfo, 6000);\r\n\r\n  const route = trades\r\n    ? trades.length > 0\r\n      ? trades[0].route.path.map(function (item) {\r\n          return item.symbol;\r\n        })\r\n      : []\r\n    : [];\r\n\r\n  const updateRouterAllowance = async newAllowance => {\r\n    setApproving(true);\r\n    try {\r\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\r\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\r\n      console.log(result);\r\n      setApproving(false);\r\n      return true;\r\n    } catch (e) {\r\n      notification.open({\r\n        message: \"Approval unsuccessful\",\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const approveRouter = async () => {\r\n    const approvalAmount =\r\n      exact === \"in\"\r\n        ? ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\r\n        : amountInMax.raw.toString();\r\n    console.log(approvalAmount);\r\n    const approval = updateRouterAllowance(approvalAmount);\r\n    if (approval) {\r\n      notification.open({\r\n        message: \"Token transfer approved\",\r\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const removeRouterAllowance = async () => {\r\n    const approvalAmount = ethers.utils.hexlify(0);\r\n    console.log(approvalAmount);\r\n    const removal = updateRouterAllowance(approvalAmount);\r\n    if (removal) {\r\n      notification.open({\r\n        message: \"Token approval removed\",\r\n        description: `The router is no longer approved for ${tokenIn}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const executeSwap = async () => {\r\n    setSwapping(true);\r\n    try {\r\n      let args;\r\n      const metadata = {};\r\n\r\n      let call;\r\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\r\n      const path = trades[0].route.path.map(function (item) {\r\n        return item.address;\r\n      });\r\n      console.log(path);\r\n      const accountList = await selectedProvider.listAccounts();\r\n      const address = accountList[0];\r\n\r\n      if (exact === \"in\") {\r\n        const _amountIn = ethers.utils.hexlify(parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\r\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\r\n        if (tokenIn === \"ETH\") {\r\n          call = \"swapExactETHForTokens\";\r\n          args = [_amountOutMin, path, address, deadline];\r\n          metadata.value = _amountIn;\r\n        } else {\r\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\r\n          args = [_amountIn, _amountOutMin, path, address, deadline];\r\n        }\r\n      } else if (exact === \"out\") {\r\n        const _amountOut = ethers.utils.hexlify(parseUnits(amountOut.toString(), tokens[tokenOut].decimals));\r\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\r\n        if (tokenIn === \"ETH\") {\r\n          call = \"swapETHForExactTokens\";\r\n          args = [_amountOut, path, address, deadline];\r\n          metadata.value = _amountInMax;\r\n        } else {\r\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\r\n          args = [_amountOut, _amountInMax, path, address, deadline];\r\n        }\r\n      }\r\n      console.log(call, args, metadata);\r\n      const result = await makeCall(call, routerContract, args, metadata);\r\n      console.log(result);\r\n      notification.open({\r\n        message: \"Swap complete 🦄\",\r\n        description: (\r\n          <>\r\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\r\n            <Text copyable>{result.hash}</Text>\r\n          </>\r\n        ),\r\n      });\r\n      setSwapping(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n      setSwapping(false);\r\n      notification.open({\r\n        message: \"Swap unsuccessful\",\r\n        description: `Error: ${e.message}`,\r\n      });\r\n    }\r\n  };\r\n\r\n  const showSwapModal = () => {\r\n    setSwapModalVisible(true);\r\n  };\r\n\r\n  const handleSwapModalOk = () => {\r\n    setSwapModalVisible(false);\r\n    executeSwap();\r\n  };\r\n\r\n  const handleSwapModalCancel = () => {\r\n    setSwapModalVisible(false);\r\n  };\r\n\r\n  const insufficientBalance = balanceIn\r\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const inputIsToken = tokenIn !== \"ETH\";\r\n  const insufficientAllowance = !inputIsToken\r\n    ? false\r\n    : routerAllowance\r\n    ? parseFloat(formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\r\n    : null;\r\n  const formattedBalanceIn = balanceIn\r\n    ? parseFloat(formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\r\n    : null;\r\n  const formattedBalanceOut = balanceOut\r\n    ? parseFloat(formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\r\n    : null;\r\n\r\n  const metaIn =\r\n    tokens && tokenList && tokenIn\r\n      ? tokenList.filter(function (t) {\r\n          return t.address === tokens[tokenIn].address;\r\n        })[0]\r\n      : null;\r\n  const metaOut =\r\n    tokens && tokenList && tokenOut\r\n      ? tokenList.filter(function (t) {\r\n          return t.address === tokens[tokenOut].address;\r\n        })[0]\r\n      : null;\r\n\r\n  const cleanIpfsURI = uri => {\r\n    try {\r\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\r\n    } catch (e) {\r\n      console.log(e, uri);\r\n      return uri;\r\n    }\r\n  };\r\n\r\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\r\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\r\n\r\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\r\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\r\n  const priceDescription = rawPrice\r\n    ? invertPrice\r\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\r\n      : `${price} ${tokenOut} per ${tokenIn}`\r\n    : null;\r\n\r\n  const priceWidget = (\r\n    <Space>\r\n      <Text type=\"secondary\">{priceDescription}</Text>\r\n      <Button\r\n        type=\"text\"\r\n        onClick={() => {\r\n          setInvertPrice(!invertPrice);\r\n        }}\r\n      >\r\n        <RetweetOutlined />\r\n      </Button>\r\n    </Space>\r\n  );\r\n\r\n  const swapModal = (\r\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n          {amountIn}\r\n          {tokenIn}\r\n        </Space>\r\n      </Row>\r\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\r\n        <span>↓</span>\r\n      </Row>\r\n      <Row>\r\n        <Space>\r\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\r\n          {amountOut}\r\n          {tokenOut}\r\n        </Space>\r\n      </Row>\r\n      <Divider />\r\n      <Row>{priceWidget}</Row>\r\n      <Row>\r\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\r\n          ? exact === \"in\"\r\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\r\n                6,\r\n              )} ${tokenOut} or the transaction will revert.`\r\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\r\n                6,\r\n              )} ${tokenIn} or the transaction will revert.`\r\n          : null}\r\n      </Row>\r\n    </Modal>\r\n  );\r\n\r\n  return (\r\n    <Card\r\n      title={\r\n        <Space>\r\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\r\n          <Typography>Uniswapper</Typography>\r\n        </Space>\r\n      }\r\n      extra={\r\n        <Button\r\n          type=\"text\"\r\n          onClick={() => {\r\n            setSettingsVisible(true);\r\n          }}\r\n        >\r\n          <SettingOutlined />\r\n        </Button>\r\n      }\r\n    >\r\n      <Space direction=\"vertical\">\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\r\n            extra={\r\n              <>\r\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\r\n                <Button\r\n                  type=\"link\"\r\n                  onClick={() => {\r\n                    setAmountOut();\r\n                    setAmountIn(formatUnits(balanceIn, tokens[tokenIn].decimals));\r\n                    setAmountOutMin();\r\n                    setAmountInMax();\r\n                    setExact(\"in\");\r\n                  }}\r\n                >\r\n                  {formattedBalanceIn}\r\n                </Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: \"left\" }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"160px\" }}\r\n              min={0}\r\n              size=\"large\"\r\n              value={amountIn}\r\n              onChange={e => {\r\n                setAmountOut();\r\n                setTrades();\r\n                setAmountIn(e);\r\n                setExact(\"in\");\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenIn}\r\n              style={{ width: \"120px\" }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              defaultValue={defaultToken}\r\n              onChange={value => {\r\n                console.log(value);\r\n                if (value === tokenOut) {\r\n                  console.log(\"switch!\", tokenIn);\r\n                  setTokenOut(tokenIn);\r\n                  setAmountOut(amountIn);\r\n                  setBalanceOut(balanceIn);\r\n                }\r\n                setTokenIn(value);\r\n                setTrades();\r\n                setAmountIn();\r\n                setExact(\"out\");\r\n                setBalanceIn();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Tooltip title={route.join(\"->\")}>\r\n            <span>↓</span>\r\n          </Tooltip>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Card\r\n            size=\"small\"\r\n            type=\"inner\"\r\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\r\n            extra={\r\n              <>\r\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\r\n                <Button type=\"text\">{formattedBalanceOut}</Button>\r\n              </>\r\n            }\r\n            style={{ width: 400, textAlign: \"left\" }}\r\n          >\r\n            <InputNumber\r\n              style={{ width: \"160px\" }}\r\n              size=\"large\"\r\n              min={0}\r\n              value={amountOut}\r\n              onChange={e => {\r\n                setAmountOut(e);\r\n                setAmountIn();\r\n                setTrades();\r\n                setExact(\"out\");\r\n              }}\r\n            />\r\n            <Select\r\n              showSearch\r\n              value={tokenOut}\r\n              style={{ width: \"120px\" }}\r\n              size=\"large\"\r\n              bordered={false}\r\n              onChange={value => {\r\n                console.log(value, tokenIn, tokenOut);\r\n                if (value === tokenIn) {\r\n                  console.log(\"switch!\", tokenOut);\r\n                  setTokenIn(tokenOut);\r\n                  setAmountIn(amountOut);\r\n                  setBalanceIn(balanceOut);\r\n                }\r\n                setTokenOut(value);\r\n                setExact(\"in\");\r\n                setAmountOut();\r\n                setTrades();\r\n                setBalanceOut();\r\n              }}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              optionFilterProp=\"children\"\r\n            >\r\n              {tokenList.map(token => (\r\n                <Option key={token.symbol} value={token.symbol}>\r\n                  {token.symbol}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Card>\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          {priceDescription ? priceWidget : null}\r\n        </Row>\r\n        <Row justify=\"center\" align=\"middle\">\r\n          <Space>\r\n            {inputIsToken ? (\r\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\r\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\r\n              </Button>\r\n            ) : null}\r\n            <Button\r\n              size=\"large\"\r\n              loading={swapping}\r\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\r\n              onClick={showSwapModal}\r\n            >\r\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\r\n            </Button>\r\n            {swapModal}\r\n          </Space>\r\n        </Row>\r\n      </Space>\r\n      <Drawer\r\n        visible={settingsVisible}\r\n        onClose={() => {\r\n          setSettingsVisible(false);\r\n        }}\r\n        width={500}\r\n      >\r\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\r\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\r\n          <Descriptions.Item label=\"routerAllowance\">\r\n            <Space>\r\n              {routerAllowance ? formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\r\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\r\n            </Space>\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\r\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\r\n          <Descriptions.Item label=\"bestPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"nextMidPrice\">\r\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"priceImpact\">\r\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"slippageTolerance\">\r\n            <InputNumber\r\n              defaultValue={defaultSlippage}\r\n              min={0}\r\n              max={100}\r\n              precision={2}\r\n              formatter={value => `${value}%`}\r\n              parser={value => value.replace(\"%\", \"\")}\r\n              onChange={value => {\r\n                console.log(value);\r\n\r\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\r\n                setSlippageTolerance(slippagePercent);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\r\n          <Descriptions.Item label=\"timeLimitInSeconds\">\r\n            <InputNumber\r\n              min={0}\r\n              max={3600}\r\n              defaultValue={defaultTimeLimit}\r\n              onChange={value => {\r\n                console.log(value);\r\n                setTimeLimit(value);\r\n              }}\r\n            />\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n      </Drawer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Swap;\r\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\r\nimport { Timeline, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Blockies from \"react-blockies\";\r\n\r\nconst { Text } = Typography;\r\n\r\n// displays a timeline for scaffold-eth usage\r\n\r\nexport default function TimelineDisplay(props) {\r\n  return (\r\n    <Timeline mode=\"right\">\r\n      <Timeline.Item dot=\"💾\">\r\n        <Text delete>\r\n          Clone and Install from the{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\r\n            github repo\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⚛️\">\r\n        <Text delete>\r\n          Start your frontend app with: <Text strong>yarn start</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"⛓\">\r\n        <Text delete={props.chainIsUp}>\r\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📝\">\r\n        <Text delete={props.hasOwner}>\r\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🤡\">\r\n        <Text delete={props.isNotSmoort}>\r\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\r\n        <Text delete={props.hasEther}>\r\n          Send test ether to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\r\n          (bottom left) faucet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.contractHasEther ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.contractHasEther}>\r\n          Deposit some funds into your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item\r\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\r\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\r\n      >\r\n        <Text delete={props.amOwnerOfContract}>\r\n          Set <b>owner</b> of your{\" \"}\r\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\r\n          smart contract wallet to your{\" \"}\r\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"☢️\">\r\n        <Text>\r\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🔬\">\r\n        <Text>\r\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\r\n          <Text strong>yarn run test</Text>\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"🚀\">\r\n        <Text>\r\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\r\n            @ me\r\n          </a>\r\n          !\r\n        </Text>\r\n      </Timeline.Item>\r\n\r\n      <Timeline.Item dot=\"📖\">\r\n        <Text>\r\n          Read more about{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\r\n            Ethereum\r\n          </a>\r\n          ,{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\r\n            Solidity\r\n          </a>\r\n          , and{\" \"}\r\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\r\n            Buidler\r\n          </a>\r\n        </Text>\r\n      </Timeline.Item>\r\n    </Timeline>\r\n  );\r\n}\r\n","import { sendBalance } from \"../helpers\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Divider, Input, Progress } from \"antd\";\r\nimport { CaretRightFilled,  FireFilled } from \"@ant-design/icons\";\r\n\r\nimport { Loader } from \"../components\";\r\n\r\nexport default function BurnWOOD({ _ }) {\r\n  const [newInputValue, setInputValue] = useState(_.WOODBalance);\r\n\r\n  return (\r\n    <div>\r\n      <Divider style={{ fontSize: 40 }} plain>\r\n      <div style={{ display:\"inline\" , \"white-space\":\"nowrap\" }}> \r\n       <b> Burn WOOD </b> <img width=\"64\" style={{\"vertical-align\": \"center\"}} src=\"/pics/logo_coins_woodburn_transparent_centered_108_reduced.png\"></img>\r\n       </div> \r\n        {/* - to 50x multiplier */}\r\n      </Divider>\r\n      {!isNaN(_.WOODBalance) && _.WOODBalance!==\"NaN\" && _.WOODBalance !== undefined ? (\r\n        <div>\r\n          {/* <h4>Your WOOD Balance: {_.WOODBalance || 0}</h4> */}\r\n          {/* <h2 style={{ marginTop: 40 }}>Total WOOD burned: {_.burnedWOOD.toLocaleString() || 0}</h2> */}\r\n          <h2 style={{ marginTop: 40 }}>Your WOOD Balance: {_.WOODBalance.toFixed(2).toLocaleString() || 0}</h2>\r\n          <div style={{ transform: \"translate(50%, 0%)\", width: \"50%\" }}>\r\n            <Input\r\n              size={\"large\"}\r\n              defaultValue={_.WOODBalance<10**(-6)?\"\":_.WOODBalance}\r\n              placeholder={\"No WOOD detected\"}\r\n              suffix={\"WOOD\"}\r\n              onChange={e => {\r\n                if (e.target.value !== \"\") {\r\n                  setInputValue(e.target.value);\r\n                } else {\r\n                }\r\n              }}\r\n            />\r\n            {_.WOODBalance < 10**(-6) ? (<div>\r\n              <Button icon={<FireFilled/>} size=\"large\" type=\"primary\" style={{ marginTop: 8 }} disabled>\r\n                Burn WOOD\r\n              </Button> <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              style={{ margin: 26 }}\r\n              icon={<CaretRightFilled />}\r\n              type=\"primary\" size=\"large\"\r\n            >\r\n              Buy WOOD\r\n            </Button></div>\r\n            ) : (\r\n             <div> <Button icon={<FireFilled/>}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                style={{ marginTop: 8 }}\r\n                onClick={async () => {\r\n                  const result = _.tx_without_notifications(\r\n                    _.customContractWOOD\r\n                      .connect(_.signer)\r\n                      [\"burnToAddress\"](\r\n                        _.address,\r\n                        sendBalance(\r\n                          !isNaN(newInputValue) && newInputValue !== \"NaN\" && newInputValue !== undefined\r\n                            ? (newInputValue.toString().includes(\".\")? (Math.floor(newInputValue*10**6)/10**6).toString(): newInputValue.toString())\r\n                            : (_.WOODBalance.toString().includes(\".\") ? (Math.floor(_.WOODBalance*10**6)/10**6).toString(): _.WOODBalance.toString()),\r\n                        ),\r\n                      ),\r\n                    update => {\r\n                      console.log(\"📡 Transaction Update:\", update);\r\n                      if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n                        console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\r\n                        console.log(\r\n                          \" ⛽️ \" +\r\n                            update.gasUsed +\r\n                            \"/\" +\r\n                            (update.gasLimit || update.gas) +\r\n                            \" @ \" +\r\n                            parseFloat(update.gasPrice) / 1000000000 +\r\n                            \" gwei\",\r\n                        );\r\n                      }\r\n                    },\r\n                  );\r\n                  console.log(\"awaiting metamask/web3 confirm result...\", result);\r\n                  console.log(await result);\r\n                }}\r\n              >\r\n                Burn WOOD\r\n              </Button> <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              style={{ margin: 26 }}\r\n              icon={<CaretRightFilled />}\r\n              type=\"link\"\r\n            >\r\n              Buy WOOD\r\n            </Button>\r\n      \r\n          <h3 style={{ marginTop: 24 }}>\r\n            <b>Burn Multiplier</b>\r\n          </h3>\r\n          {/* <p>Burn more WOOD to increase your profit 50x</p> */}\r\n          <div style={{ transform: \"translate(50%, 0%)\", width: \"50%\" }}>\r\n            {\" \"}\r\n            <Progress\r\n              strokeColor={{\r\n                \"0%\": \"#108ee9\",\r\n                \"100%\": \"#87d068\",\r\n              }}\r\n              percent={(_.burnMultiplier / 50) * 100}\r\n              status=\"active\"\r\n              showInfo={false}\r\n            />\r\n            {/* <Divider /> */}\r\n            <h1>\r\n              <b>{_.burnMultiplier.toLocaleString() || 0} X</b>{\" \"}\r\n            </h1>\r\n          </div></div>\r\n            )}\r\n          </div>\r\n          \r\n         \r\n        </div>\r\n      ) : (\r\n        <Loader/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { sendBalance } from \"../helpers\";\r\nimport React, { useState } from \"react\";\r\nimport { Button, Divider, Input } from \"antd\";\r\nimport { Loader } from \"../components\";\r\nimport { CaretRightFilled, LockFilled } from \"@ant-design/icons\";\r\n\r\nexport default function LockWATER({ _ }) {\r\n  const [newInputValue, setInputValue] = useState(_.WATERBalance);\r\n\r\n  return (\r\n    <div>\r\n      \r\n      {!isNaN(_.WATERBalance) && _.WATERBalance !== \"NaN\" && _.WATERBalance !== undefined ? _.WATERBalance===0? ( <div style={{ margin: 8 }}><Divider style={{ fontSize: 40 }} plain>\r\n        <div style={{ display:\"inline\" , \"white-space\":\"nowrap\" }}> \r\n              <b>Buy WATER</b> <img width=\"64\" heigth=\"64\" style={{\"vertical-align\": \"top\"}} src=\"/pics/logo_coins_water_large_square_108_reduced.png\"></img>\r\n       </div> \r\n      </Divider><h2>You don't seem to have WATER. In order to use our service, it's necessary to own WATER </h2><Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x3c73799db546e98f23f738ea0871b6ced71d873a&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              style={{ marginTop: 20 }}\r\n              icon={<CaretRightFilled />}\r\n              type=\"primary\" size=\"large\"\r\n            >\r\n              Buy WATER{\" \"}\r\n            </Button></div>):(\r\n        <div style={{ margin: 8 }}><Divider style={{ fontSize: 40 }} plain>\r\n              <div style={{ display:\"inline\" , \"white-space\":\"nowrap\" }}> \r\n              <b>Start by Locking-in WATER</b> <img width=\"64\" heigth=\"64\" style={{\"vertical-align\": \"top\"}} src=\"/pics/logo_coins_water_large_square_108_reduced.png\"></img>\r\n       </div> \r\n      </Divider>\r\n          <h4>Your WATER Balance: {_.WATERBalance.toLocaleString() || 0}</h4>\r\n          <div style={{ transform: \"translate(50%, 0%)\", width: \"50%\" }}>\r\n            <Input\r\n              size={\"large\"}\r\n              defaultValue={_.WATERBalance}\r\n              placeholder={_.WATERBalance === 0 ? \"WATER balance is 0, click Buy WATER below\" : _.WATERBalance}\r\n              suffix={\"WATER\"}\r\n              onChange={e => {\r\n                if (e.target.value !== \"\") {\r\n                  setInputValue(e.target.value);\r\n                } else {\r\n                }\r\n              }}\r\n            />\r\n            {_.WATERBalance === 0 ? (\r\n              <Button    style={{ marginTop: 8 }} size=\"large\" type=\"primary\" disabled>\r\n                Lock-In WATER\r\n              </Button>\r\n            ) : (\r\n              <Button icon={<LockFilled />}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                style={{ marginTop: 8 }}\r\n                onClick={async () => {\r\n                  const result = _.tx_without_notifications(\r\n                    _.customContractWOOD\r\n                      .connect(_.signer)\r\n                      [\"lock\"](\r\n                        _.address,\r\n                        sendBalance(\r\n                          !isNaN(newInputValue) && newInputValue !== \"NaN\" && newInputValue !== undefined\r\n                            ? (newInputValue.toString().includes(\".\")? (Math.floor(newInputValue*10**6)/10**6).toString(): newInputValue.toString())\r\n                            : (_.WATERBalance.toString().includes(\".\") ? (Math.floor(_.WATERBalance*10**6)/10**6).toString(): _.WATERBalance.toString()),\r\n                        ),\r\n                      ),\r\n                    update => {\r\n                      console.log(\"📡 Transaction Update:\", update);\r\n                      if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n                        console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\r\n                        console.log(\r\n                          \" ⛽️ \" +\r\n                            update.gasUsed +\r\n                            \"/\" +\r\n                            (update.gasLimit || update.gas) +\r\n                            \" @ \" +\r\n                            parseFloat(update.gasPrice) / 1000000000 +\r\n                            \" gwei\",\r\n                        );\r\n                      }\r\n                    },\r\n                  );\r\n                  console.log(\"awaiting metamask/web3 confirm result...\", result);\r\n                  console.log(await result);\r\n                }}\r\n              >\r\n                Lock-In WATER\r\n              </Button>\r\n            )}\r\n          </div>\r\n          \r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x3c73799db546e98f23f738ea0871b6ced71d873a&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              style={{ marginTop: 26 }}\r\n              icon={<CaretRightFilled />}\r\n              type=\"link\"\r\n            >\r\n              Buy WATER{\" \"}\r\n            </Button>\r\n          \r\n          {/* <Progress\r\n          strokeColor={{\r\n            from: \"#108ee9\",\r\n            to: \"#87d068\",\r\n          }}\r\n          percent={(_.timeMultiplier.toLocaleString() / 10) * 100}\r\n          status=\"active\"\r\n          showInfo={false}\r\n        />\r\n        <div>{(_.timeMultiplier.toLocaleString() || 0) + \" / 10\"} </div> */}\r\n        </div>\r\n      ) : (\r\n        <Loader/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// import { sendBalance } from \"../helpers\";\r\nimport React from \"react\";\r\n// import { formatEther, parseEther } from \"@ethersproject/units\";\r\nimport { Button, Divider, Progress, Popconfirm } from \"antd\";\r\nimport { UnlockFilled } from \"@ant-design/icons\";\r\n\r\nexport default function UnlockWATER({ _ }) {\r\n  const unLockedBlocks = _.lastMintBlockNumber ? _.lastBlockNumber - _.firstLockInBlock : 0;\r\n  const unLockedDays = (unLockedBlocks / 28800);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n\r\n  const showPopconfirm = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    // setConfirmLoading(true);\r\n    // setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setConfirmLoading(false);\r\n    // }, 2000);\r\n\r\n    const result = _.tx_without_notifications(_.customContractWOOD.connect(_.signer)[\"unlock\"](), update => {\r\n      console.log(\"📡 Transaction Update:\", update);\r\n      if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n        console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\r\n        console.log(\r\n          \" ⛽️ \" +\r\n            update.gasUsed +\r\n            \"/\" +\r\n            (update.gasLimit || update.gas) +\r\n            \" @ \" +\r\n            parseFloat(update.gasPrice) / 1000000000 +\r\n            \" gwei\",\r\n        );\r\n\r\n      }\r\n    });\r\n    console.log(\"awaiting metamask/web3 confirm result...\", result);\r\n    // console.log(await result);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Divider style={{ fontSize: 40 }} plain>\r\n     \r\n         <div style={{ display:\"inline\" , \"white-space\":\"nowrap\" }}> \r\n       <b> Unlock WATER </b> <img width=\"64\" heigth=\"64\" style={{\"vertical-align\": \"top\"}} src=\"/pics/logo_coins_water_large_square_108_reduced.png\"></img>\r\n       </div> \r\n      </Divider>\r\n      <div style={{ margin: 8 }}>\r\n        <h2 style={{ marginTop: 40 }}>\r\n          Locked-in WATER: {_.lockedInWATER.toFixed(2).toLocaleString() || 0}\r\n          {/* ({unLockededBlocks.toLocaleString()} Blocks) */}\r\n        </h2><p>\r\n          Last lock-in {unLockedDays.toFixed(1).toLocaleString() || 0} days ago{/* {unLockedBlocks || 0} blocks */}\r\n        </p>\r\n        <Popconfirm\r\n          title=\"Before unlocking, make sure to cash-in on your WOOD. Otherwise they will be lost.\"\r\n          visible={visible}\r\n          onConfirm={handleOk}\r\n          okButtonProps={{ loading: confirmLoading }}\r\n          onCancel={handleCancel}\r\n          okText=\"Unlock\"\r\n        >\r\n          <Button icon={<UnlockFilled />} \r\n          onClick={showPopconfirm} \r\n          // onClick={handleOk} \r\n          size=\"large\" type=\"primary\" style={{ marginTop: 8, marginBottom: 30 }}>\r\n            UNLOCK\r\n          </Button> \r\n        </Popconfirm>\r\n\r\n        <h3 style={{ marginTop: 24 }}>\r\n          <b>Time Multiplier </b>\r\n        </h3>\r\n        <div style={{ transform: \"translate(50%, 0%)\", width: \"50%\" }}>\r\n          {\" \"}\r\n          <Progress\r\n            strokeColor={{\r\n              from: \"#108ee9\",\r\n              to: \"#87d068\",\r\n            }}\r\n            percent={(_.timeMultiplier.toLocaleString() / 10) * 100}\r\n            status=\"active\"\r\n            showInfo={false}\r\n          />\r\n          <h1>\r\n            <b>{_.timeMultiplier.toLocaleString() || 0} X</b>{\" \"}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Button, Card, Divider } from \"antd\";\r\nimport { PoweroffOutlined } from \"@ant-design/icons\";\r\n\r\nexport default function ENABLE({ _ }) {\r\n  const [newInputValue, setInputValue] = useState(\r\n    \"In order to interact with our smart contract, you need to Enable your address. This will only happen once.\",\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n        <div style={{ marginTop: 18, marginBottom: 38 }}>\r\n          <Divider style={{ fontSize: 40 }} plain>\r\n            <b>Enable your Address</b>\r\n          </Divider>\r\n          <h2 style={{ marginTop: 40 }}>{newInputValue}</h2>\r\n          <Button\r\n            size={\"large\"}\r\n            type=\"primary\"\r\n            style={{ marginTop: 8 }}\r\n            icon={<PoweroffOutlined />}\r\n            onClick={async () => {\r\n              const result = _.tx_without_notifications(\r\n                _.customContractWATER.connect(_.signer)[\"authorizeOperator\"](_.addressWOODContract),\r\n                update => {\r\n                  console.log(\"📡 Transaction Update:\", update);\r\n                  if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n                    console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\r\n                    console.log(\r\n                      \" ⛽️ \" +\r\n                        update.gasUsed +\r\n                        \"/\" +\r\n                        (update.gasLimit || update.gas) +\r\n                        \" @ \" +\r\n                        parseFloat(update.gasPrice) / 1000000000 +\r\n                        \" gwei\",\r\n                    );\r\n                    setInputValue(\"You can Mint and Grow WOOD Now!\");\r\n                    setTimeout(() => {\r\n                      window.location.reload();\r\n                    }, 3);\r\n                  }\r\n                },\r\n              );\r\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\r\n              console.log(await result);\r\n            }}\r\n          >\r\n            ENABLE\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { BurnWOOD, LockWATER, MintWOOD, UnlockWATER, Loader } from \"../components\";\r\n\r\nexport default function GrowWOOD({ _ }) {\r\n  return (\r\n    <div>\r\n      {!isNaN(_.lockedInWATER) && _.lockedInWATER !== undefined ? (\r\n        _.lockedInWATER === 0 ? (\r\n          <div>\r\n            <div>\r\n              <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n                <LockWATER _={_} />\r\n              </Card>\r\n            </div>{\" \"}\r\n            {/* <div>\r\n              <Card style={{ marginBottom: 0 }}>\r\n                <BurnWOOD _={_} />\r\n              </Card>\r\n            </div> */}\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n                <MintWOOD _={_} />{\" \"}\r\n              </Card>\r\n            </div>\r\n            <div>\r\n              <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n                <UnlockWATER _={_} />{\" \"}\r\n              </Card>\r\n            </div>\r\n            <div>\r\n              <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n                <BurnWOOD _={_} />\r\n              </Card>\r\n            </div>\r\n          </div>\r\n        )\r\n      ) : (\r\n        <Loader/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Divider, Popconfirm } from \"antd\";\r\nimport { DollarCircleFilled } from \"@ant-design/icons\";\r\n\r\nexport default function MintWOOD({ _ }) {\r\n  const unMintedBlocks = _.lastMintBlockNumber ? _.lastBlockNumber - _.lastMintBlockNumber : 0;\r\n  const unMintedDays = unMintedBlocks / 28800;\r\n  // const unMintedWOOD = unMintedBlocks * _.timeMultiplier * _.burnMultiplier * _.lockedInWATER * 0.00000001;\r\n\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [confirmLoading, setConfirmLoading] = React.useState(false);\r\n\r\n  const showPopconfirm = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n    // setConfirmLoading(true);\r\n    // setTimeout(() => {\r\n    //   setVisible(false);\r\n    //   setConfirmLoading(false);\r\n    // }, 2000);\r\n\r\n    const result = _.tx_without_notifications(\r\n      _.customContractWOOD.connect(_.signer)[\"mintToAddress\"](_.address, _.address, _.lastBlockNumber),\r\n      update => {\r\n        console.log(\"📡 Transaction Update:\", update);\r\n        if (update && (update.status === \"confirmed\" || update.status === 1)) {\r\n          console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\r\n          console.log(\r\n            \" ⛽️ \" +\r\n              update.gasUsed +\r\n              \"/\" +\r\n              (update.gasLimit || update.gas) +\r\n              \" @ \" +\r\n              parseFloat(update.gasPrice) / 1000000000 +\r\n              \" gwei\",\r\n          );\r\n        }\r\n      },\r\n    );\r\n    console.log(\"awaiting metamask/web3 confirm result...\", result);\r\n    // console.log(await result);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // console.log('Clicked cancel button');\r\n    setVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Divider style={{ fontSize: 40 }} plain>\r\n        <div style={{ display: \"inline\", \"white-space\": \"nowrap\" }}>\r\n          {\" \"}\r\n          <img\r\n            width=\"64\"\r\n            style={{ \"vertical-align\": \"top\" }}\r\n            src=\"/pics/logo_coins_wood_large_square_108_reduced.png\"\r\n          ></img>\r\n          <b> WOOD is Now Growing </b>\r\n        </div>\r\n      </Divider>\r\n      <div>\r\n        <h2 style={{ marginTop: 40 }}>Uncollected WOOD: {_.WOODmintAmount.toFixed(2).toLocaleString() || 0}</h2>\r\n        {/* <h4>Total WOOD Supply: {_.totalSupplyWOOD || 0}</h4> */}\r\n        {/* <Divider /> */}\r\n        {/* <h4>Time Multiplier: {timeMultiplier}</h4>\r\n          <h4>Burn Multiplier: {burnMultiplier}</h4> */}\r\n\r\n        {/* <h4>\r\n          <p>Your WOOD Balance: {_.WOODBalance || 0} </p>\r\n        </h4> */}\r\n\r\n        {/* <Popconfirm\r\n          title=\"TIP: Before cash-in, burn some WOOD to increase Burn Multiplier and collect more WOOD\"\r\n          visible={visible}\r\n          onConfirm={handleOk}\r\n          okButtonProps={{ loading: confirmLoading }}\r\n          onCancel={handleCancel}\r\n          okText=\"Cash-In\"\r\n        > */}\r\n          <Button\r\n            icon={<DollarCircleFilled />}\r\n            onClick={handleOk}\r\n            // onClick={showPopconfirm}\r\n            type=\"primary\"\r\n            size=\"large\"\r\n            style={{ marginTop: 21, marginBottom: 26 }}\r\n          >\r\n            Cash-In\r\n          </Button>\r\n        {/* </Popconfirm> */}\r\n        <p>\r\n          Days since last cash-in: {unMintedDays.toFixed(1).toLocaleString() || 0}\r\n          {/* {unMintedBlocks || 0} blocks */}\r\n        </p>\r\n      </div>\r\n      {/* </Card> */}\r\n    </div>\r\n  );\r\n}\r\n","import { Divider, Card } from \"antd\";\r\nimport React from \"react\";\r\nimport { Address } from \"../components\";\r\n\r\n// displays a page header\r\n\r\nexport default function EcosystemInfo({ _ }) {\r\n  return (\r\n    <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}} title={<b>ECOSYSTEM INFO</b>}><b><h3>    <b>  <div><b>\r\n        <div>Global WOOD Burned: {_.globalBurnedamount.toLocaleString()}</div>\r\n        <div>Global WATER Locked-In: {_.globalLockedamount.toLocaleString()}</div>\r\n        <div>Global Burn Ratio: {(_.globalRatio * 100).toLocaleString()}%</div>\r\n        <Divider />\r\n        <div>Total WOOD in Circulation: {_.totalSupplyWOOD.toLocaleString()}</div>\r\n        <div>Total WATER Supply: {_.totalSupplyWATER.toLocaleString()}</div>\r\n        <Divider />\r\n        <div>\r\n          WOOD Contract Address:\r\n          <Address\r\n            blockExplorer={_.blockExplorer}\r\n            address={_.customContractWOOD ? _.customContractWOOD.address : \"No contract\"}\r\n            ensProvider={_.ethereumProvider}\r\n            fontSize={16}\r\n            size=\"long\"\r\n          />\r\n        </div>\r\n        <div>\r\n          WATER Contract Address:\r\n          <Address\r\n            blockExplorer={_.blockExplorer}\r\n            address={_.customContractWATER ? _.customContractWATER.address : \"No contract\"}\r\n            ensProvider={_.ethereumProvider}\r\n            fontSize={16}\r\n            size=\"long\"\r\n          />\r\n        </div>\r\n        <Divider />\r\n\r\n        <div>\r\n          Buy WOOD\r\n          <a target=\"_blank\" href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\">\r\n            {\" \"}\r\n            here\r\n          </a>\r\n        </div>\r\n        <div>\r\n          Buy WATER\r\n          <a  target=\"_blank\" href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x3c73799db546e98f23f738ea0871b6ced71d873a&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"> here</a>\r\n        </div>\r\n        \r\n        {/* <Divider /> */}\r\n        </b>   </div></b></h3></b>\r\n    </Card>\r\n  );\r\n}\r\n","import { Divider, Card } from \"antd\";\r\nimport React from \"react\";\r\n// displays a page header\r\n\r\nexport default function TokenInfo({ _ }) {\r\n  return (\r\n    <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}} title={<b>MY INFO</b>}>\r\n      <b><h3>    <b>  <div><b>\r\n        <div><b>WATER Balance: {_.WATERBalance.toLocaleString()}</b></div>\r\n        <div><b>WOOD Balance: {_.WOODBalance.toLocaleString()}</b></div>\r\n        <Divider />\r\n        <div>WOOD Being Grown: {_.WOODmintAmount.toLocaleString()}</div>\r\n        <div>Locked-In WATER: {_.lockedInWATER.toLocaleString()}</div>\r\n        <div>Burned WOOD: {_.burnedWOOD.toLocaleString()}</div>\r\n        <div>Burn Ratio: {(_.myRatio * 100).toLocaleString()}%</div>\r\n        <div>Burn Multiplier: {_.burnMultiplier.toLocaleString()}x</div>\r\n        <div>Time Multiplier: {_.timeMultiplier.toLocaleString()}x</div>\r\n        </b>   </div></b></h3></b>\r\n    </Card>\r\n  );\r\n}\r\n","import { Divider, Card } from \"antd\";\r\nimport React from \"react\";\r\nimport { Address } from \".\";\r\n\r\n// displays a page header\r\n\r\nexport default function APYInfo({ _ }) {\r\n  const unMintedBlocks = _.lastMintBlockNumber ? _.lastBlockNumber - _.lastMintBlockNumber : 0;\r\n  const unMintedDays = unMintedBlocks / 28800;\r\n  const yourMultiplier = 10 * _.burnMultiplier;\r\n  const yourAPY =\r\n    unMintedDays && _.lockedInWATER\r\n      ? (((_.WOODmintAmount / unMintedDays) * 365 * _.priceWOOD) / (_.lockedInWATER * _.priceWATER)) * 100\r\n      : 0;\r\n  const onexAPY = ((1 * 10 * 0.00000001 * 28800 * 365 * _.priceWOOD) / _.priceWATER) * 100;\r\n  const fiftyxAPY = ((50 * 10 * 0.00000001 * 28800 * 365 * _.priceWOOD) / _.priceWATER) * 100;\r\n\r\n  return (\r\n    <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n      <Divider style={{ fontSize: 40 }} plain>\r\n        {yourAPY ? (\r\n          <b>Your APY: {yourAPY.toFixed(2).toLocaleString()}%</b>\r\n        ) : (\r\n          <b> APY: {fiftyxAPY.toFixed(2).toLocaleString()}% </b>\r\n        )}\r\n      </Divider>\r\n      <div>\r\n        <div>\r\n          {yourAPY ? (\r\n            \"\"\r\n          ) : (\r\n            // <b>Your APY: {yourAPY.toFixed(2).toLocaleString()}%</b>\r\n            <b>Lock-In WATER to grow WOOD</b>\r\n          )}\r\n        </div>\r\n        <div>APY (1x burn bonus): {onexAPY.toFixed(2).toLocaleString()}%</div>\r\n        <div>APY (50x burn bonus): {fiftyxAPY.toFixed(2).toLocaleString()}%</div>\r\n\r\n        {/* <Divider />\r\n        <div>Price WATER: ${_.priceWATER.toFixed(10)}</div>\r\n        <div>Price WOOD: ${_.priceWOOD.toFixed(10)}</div> */}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Divider, Progress, Card } from \"antd\";\r\n\r\nexport default function Multipliers({ _ }) {\r\n  const totalMultiplier = _.timeMultiplier * _.burnMultiplier;\r\n\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}>\r\n        <div>\r\n          <Divider style={{ fontSize: 40 }} plain>\r\n          {/* <img width=\"56\" style={{\"vertical-align\": \"center\"}} src=\"/pics/logo_coins_woodwater_large_square_108_reduced.png\"></img>\r\n         <div style={{ display:\"inline\" , \"white-space\":\"nowrap\" }}>  */}\r\n         <b>Total Bonuses - {!isNaN(totalMultiplier) ? totalMultiplier.toFixed(2).toLocaleString() : 1}/500X</b>\r\n         {/* </div>  */}\r\n          </Divider>\r\n        </div>\r\n        <p>Lock-in WATER and burn WOOD to increase Multipliers</p>\r\n        <div style={{ transform: \"translate(50%, 0%)\", width: \"50%\" }}>\r\n          <h3 style={{ marginTop: 35 }}>\r\n            <b>Burn Bonus</b>\r\n          </h3>\r\n          {/* <p>Burn more WOOD to increase your profit 50x</p> */}\r\n          <Progress\r\n            strokeColor={{\r\n              \"0%\": \"#108ee9\",\r\n              \"100%\": \"#87d068\",\r\n            }}\r\n            percent={(_.burnMultiplier / 50) * 100}\r\n            status=\"active\"\r\n            showInfo={false}\r\n          />\r\n          {/* <Divider /> */}\r\n          <h1>\r\n            <b>{!isNaN(_.burnMultiplier) && _.burnMultiplier !== undefined ? _.burnMultiplier.toLocaleString() : 1} / 50X</b>{\" \"}\r\n          </h1>\r\n          <Divider />\r\n          <h3 style={{ marginTop: 35 }}>\r\n            <b>Time Bonus </b>\r\n          </h3>\r\n          <Progress\r\n            strokeColor={{\r\n              from: \"#108ee9\",\r\n              to: \"#87d068\",\r\n            }}\r\n            percent={(_.timeMultiplier.toLocaleString() / 10) * 100}\r\n            status=\"active\"\r\n            showInfo={false}\r\n          />\r\n          <h1>\r\n            <b>\r\n              {!isNaN(_.timeMultiplier) && _.timeMultiplier !== undefined ? _.timeMultiplier.toLocaleString() : 1} / 10X\r\n            </b>{\" \"}\r\n          </h1>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Modal, Button, Card } from 'antd';\r\n\r\nexport default function CoreValues() {\r\n  const [visible, setVisible] = useState(false);\r\n  const titlePage = \"Waterwood Core Values\"\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={() => setVisible(true)}>\r\n        {titlePage}\r\n      </Button>\r\n      <Modal\r\n        title={titlePage}\r\n        onOk={() => setVisible(false)}\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        footer={<Button onClick={() => setVisible(false)}>Close</Button>}\r\n        align={\"center\"}\r\n        width={\"60%\"}\r\n      ><Card >\r\n          <div align=\"left\" >\r\n            {/* <h1 style={{ fontSize: 40 }}></h1> */}\r\n            {/* <h3><b>Waterwood Network</b> is a gateway into next-gen Deflationary Monetary Systems that is OWNERLESS, IMMUTABLE, AUDITED and ran completely by the community. Our revolutionary Binance smart contracts form Base Currencies of DeFi.</h3> */}\r\n            <h3>\r\n              <h2>Rarity at the Core</h2>\r\n              <p>\r\n\r\n                Waterwood (WATER) tokens have fixed supply. Over 70% of lifetime WATER supply is locked-up in the WOOD smart contract. Constant demand to lock-up more WATER drives rarity.\r\n\r\n                WOOD tokens have infinite supply and deflation is automatically adjusted by \"controlled burn\". Over 60% of all WOOD tokens have been destroyed from circulation.\r\n              </p>\r\n              <h2>Linear Deflation</h2>\r\n              <p>\r\n                WOOD can only be generated by locking-in WATER tokens. WOOD is generated in a linear & predictable manner every 3 seconds. WOOD growth scales linearly based on the amount of WOOD destroyed from circulation.\r\n\r\n                PancakeSwap acts as M0 money pools in our DeFi ecosystem. WOOD is constantly \"re-cycled\" via Burning & WOOD Collecting cycles. With no WATER inflation and controlled WOOD deflation our currencies offer high rarity and growth potential.\r\n              </p>\r\n              {/* <h2>Secure By Design & Professionally Audited</h2><p>All business logic is executed via Audited Smart Contracts so your funds are safe and secure. No 3rd parties are involved in fund movement and transactions are performed on-chain.</p> */}\r\n\r\n              <h2>Built For The Community</h2><p>Utilizing the latest serverless, web3 and mobile technologies our Smart Contracts feel like the apps you use and love. Seamlessly switch your experience from desktop to mobile on the same secure and easy-to-use dashboard.</p>\r\n            </h3>\r\n          </div></Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { Modal, Button, Card } from 'antd';\r\n\r\nexport default function MintingBonuses() {\r\n  const [visible, setVisible] = useState(false);\r\n  const titlePage = \"Bonuses Explained\"\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={() => setVisible(true)}>\r\n        {titlePage}\r\n      </Button>\r\n      <Modal\r\n        title={titlePage}\r\n        onOk={() => setVisible(false)}\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        footer={<Button onClick={() => setVisible(false)}>Close</Button>}\r\n\r\n        width={\"60%\"}\r\n      ><Card>\r\n          <div align=\"left\">\r\n            <h1 style={{ fontSize: 40 }}></h1>\r\n            <h2></h2>\r\n            <h3>\r\n              <p>\r\n                With every single block, you generate 0.00000001 WOOD per 1 WATER locked-in. This is your constant growing rate, and will show up as the real-time WOOD balance in your dashboard. You do not actually own the WOOD tokens until you press \"Cash-in\".\r\n              </p>\r\n              <p>\r\n                In your dashboard, you will see the number of WOOD you can collect called \"uncollected WOOD\". In this example below, there are 150,000 uncollected blocks. This number, along with the bonuses, will be used to calculate the total amount of WOOD you can collect in the example at the bottom.\r\n              </p>\r\n              <p>\r\n                Bonuses are applied to the total amount of uncollected blocks at the time of COLLECTING your WOOD tokens. Bonuses do not affect your constant rate of generating:\r\n\r\n                0.00000001 WOOD / WATER. In other words, bonuses will affect your final WOOD token collectable at the time of pressing CASH-IN.\r\n              </p>\r\n              <p>\r\n                Now let's learn about specific rate bonuses:\r\n              </p>\r\n              <p>\r\n                <b>Time Bonus:</b></p>\r\n              <p>\r\n\r\n                The maximum time bonus you can achieve is 10x. Once you have reached 10x Time Bonus, every time you Grow WOOD (which is every 3 seconds), you generate 10x the amount.\r\n                </p>\r\n              <p>\r\n                10x Time Bonus: After you lock-in WATER, you will start receiving a small multiplier every block (~3 seconds). This lasts for about 3 weeks after which you gain a permanent 10x bonus to your WOOD growth rate (until you stop growing).\r\n              </p>\r\n              <p>\r\n                <b>Burn Bonus:</b></p>\r\n              <p>\r\n\r\n                The value of WOOD originates from borrowing a portion of the worldwide WOOD growth rate when burning WOOD.\r\n                </p>\r\n              <p>\r\n                50x Burn Bonus: If you burn 50 times the global average of burned WOOD, you will get 50x the mint rate. This is a global number that is based on how much WATER is currently powering WOOD growth and how much WOOD these addresses have burned. \r\n                </p>\r\n              <p>\r\n                In other words: (All the WOOD I've ever burned / my WATER locked-in size) must be 50 times greater than (global burned WOOD of active locked-in accounts / WATER powering active locked-in accounts).\r\n              </p>\r\n              <p>\r\n                WOOD burned to an address is permanent for that address.\r\n                </p>\r\n              <p>\r\n                As more people burn WOOD, the amount of WOOD tokens you need to burn increases, and as locked-in stop the amount of WOOD you need to burn decreases (keep in mind the formula is based on ratios, so by starting locking-in with 10 WATER you would need 10x the burn amount compared to someone doing the same with only 1 WATER).\r\n                </p>\r\n              <p>\r\n                After you BURN some WOOD, you will see an updated BURN bonus in your dashboard.\r\n                </p>\r\n              <p>\r\n                The two bonuses (TIME Bonus and BURN Bonus) are multiplicative. So you can get up to 500x WOOD collecting rate at the time of pressing CASH-IN. It is suggested to get max 500x Total Multiplier at time of collecting WOOD, so this means you will most likely buy some WOOD first and burn it to your address if you are not at max multiplier yet before collecting your WOOD.\r\n              </p>\r\n              <p>\r\n                Remember, your dashboard bonuses are applied at the time of collecting WOOD. You will see an estimate of how much your WOOD (with applied bonuses) is worth.\r\n              </p>\r\n              <p>\r\n                See an example calculation:\r\n              </p>\r\n              <ol><li> Locking-In 5,000,000 WATER</li>\r\n                <li>For 150,000 blocks</li>\r\n                <li>7.5x time bonus multiplier</li>\r\n                <li>26x burn multiplier</li></ol>\r\n\r\n              <p><b>Total WOOD generated </b> = 0.00000001 * 5,000,000 * 150,000 * 7.5 * 26 = 1,462,500 WOOD</p>\r\n            </h3>\r\n          </div></Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};","import LazyLoad from 'react-lazyload';\r\nimport React, { useState } from 'react';\r\nimport { Divider,Modal, Button, Card } from 'antd';\r\n\r\nexport default function DashboardOverview() {\r\n  const [visible, setVisible] = useState(false);\r\n  const titlePage = \"Using the Dashboard\"\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={() => setVisible(true)}>\r\n      {titlePage}\r\n      </Button>\r\n      <Modal\r\n        title={titlePage}\r\n        onOk={() => setVisible(false)}\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        footer={<Button onClick={() => setVisible(false)}>Close</Button>}\r\n\r\n        width={\"60%\"}\r\n      ><Card >\r\n         <LazyLoad height={200} offset={100} once={true} resize={true}>\r\n       <div align=\"left\" >\r\n            <h1 style={{ fontSize: 40 }}></h1>\r\n            <h3> The WaterWood dashboard is a feature-rich user interface and all-in-one realtime powerhouse. The dashboard is where you can generate and cash-in your WOOD tokens.</h3>\r\n            <h2>Step-by-step to Guide </h2>   \r\n            <h3>\r\n            <p>\r\n             1. First things first, you need to have Metamask as a browser extension. When you go to the <a href=\"/dashboard\">dasboard</a> you'll be prompted to download it\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/download_metamask.jpg\"  />\r\n        \r\n              <p>\r\n             If you have a wallet, connect it and continue, otherwise click on Download Metamask and follow the procedure to set up an account\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/metamask.jpg\"    />\r\n              <Divider/>\r\n              <p>\r\n             2. Once Metamask is setup, connect to Binance Smart Chain Network. Go to Metamask Settings > Networks > Add Network. Then input the following:\r\n              </p>\r\n              <ul>\r\n              <li>Network Name : Binance Smart Chain</li>\r\n              <li>New RPC URL: https://bsc-dataseed.binance.org</li>\r\n              <li>Chain ID: 56</li>\r\n              <li>Current Symbol: BNB</li>\r\n              <li>Block Explorer: https://bscscan.com</li>\r\n              </ul>\r\n              <img style={{width:\"100%\"}} src=\"pics/docs/bsc_rpc.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n             3. Once this is done, you'll need to buy some BNB to interact with our smart contract, you can purchase BNB on <a target=\"_blank\" href=\"https://binance.com\">Binance Exchange</a> or on <a  target=\"_blank\" href=\"https://pancakeswap.finance\"> Pancake Swap</a>. Then send them to your Metamask address.\r\n              </p>\r\n              <Divider/>\r\n              <p>\r\n             4. Once you have Metamask and are connected to Binance Smart Chain you will see a prompt to Enable your address. This is a one-time transaction and will allow you to start generating WOOD tokens. Click on ENABLE\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/enable.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n            5. Then the dashboard will prompt you to buy some WATER tokens on Pancakeswap if you do not have some already. Go and click Buy WATER\r\n              </p>\r\n              <img style={{width:\"100%\"}} src=\"pics/docs/buyWATER.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n             6. At that point you are ready to lock-in your WATER and start generating WOOD. Click on Lock-In WATER\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/lockin.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n            7. Then the dashboard will show you that your WOOD are now growing. You can Cash-in at any time but it's advised to wait at least 3 weeks til you reach 10x time multiplier. You can also burn some WOOD to increase your burn multiplier to 50x and Cash-in even more\r\n              </p>\r\n              <img style={{width:\"100%\"}} src=\"pics/docs/WOODgrowing.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n             8. Now you have the possibility to burn WOOD to increase your burn multiplier. Click on Buy WOOD if your WOOD balance is null\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/buyWOOD.jpg\"   />\r\n     \r\n              <p>\r\n            If you already have some WOOD, simply click on Burn WOOD, you will see your burn multiplier increase in real time\r\n              </p>\r\n              <img style={{width:\"100%\"}} src=\"pics/docs/burnWOOD.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n            9. Finally, unlock your WATER to dispose of your coins, Make sure you cash-in on your WOOD first otherwise they will be lost forever. You are free to sell your WATER coins in the market or relock them in later\r\n              </p>\r\n              <img style={{width:\"100%\"}} src=\"pics/docs/unlock.jpg\"   />\r\n              <Divider/>\r\n              <p>\r\n             10. At last you have a global overview of your data, with your Total Multiplier, your Tokens Info and the Ecosystem info\r\n              </p>\r\n              \r\n              <img style={{width:\"100%\"}} src=\"pics/docs/info.jpg\"   />\r\n     \r\n             \r\n             \r\n              </h3>\r\n          </div>\r\n          </LazyLoad>\r\n          </Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};","import React, { useState } from 'react';\r\nimport { Modal, Button, Card } from 'antd';\r\n\r\nexport default function TokenSpecs() {\r\n  const [visible, setVisible] = useState(false);\r\n  const titlePage = \"Token Specifications\"\r\n  return (\r\n    <>\r\n      <Button type=\"link\" onClick={() => setVisible(true)}>\r\n        {titlePage}\r\n      </Button>\r\n      <Modal\r\n        title={titlePage}\r\n        onOk={() => setVisible(false)}\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        footer={<Button onClick={() => setVisible(false)}>Close</Button>}\r\n\r\n        width={\"60%\"}\r\n        ><Card >\r\n        <div align=\"left\">\r\n          <h1 style={{ fontSize: 40 }}></h1>\r\n         \r\n          <h3>\r\n            <p>\r\n              WATER is a BEP-20 compatible (ERC-777) implementation and was deployed on Binance mainnet with fixed supply of 1,386,000,000 WATER.\r\n            </p>\r\n            <p>\r\n              WOOD is a NON-FIXED supply token in our ecosystem. WOOD has linear and predictable inflation & controlled burn.\r\n            </p>\r\n            <ul><li><b>WATER lock/unlock</b>: To generate WOOD tokens you need to lock in some WATER. There is no minimum amount and the rewards scale linearly & predictably.</li>\r\n            <li><b>Cash-in</b>: you can collect WOOD at any time, as long as your WATER tokens are still locked-in</li>\r\n            <li><b>10x Time Bonus</b>: After you lock-in WATER for at least 1 hour, you will start receiving a small time multiplier every 3 seconds. This lasts for about 3 weeks after which you can gain a permanent 10x (until you unlock WATER)</li>\r\n            <li><b>50x Burn Bonus</b>: If you burn 50 times the global burn average then you will get 50x the growth rate. This is a global number that is based on how much WATER is currently locked-in and how much WOOD these locked-in addresses burned. Keep in mind the formula is based on ratios, so by locking 5 WATER you would need 5x the burn amount compared to locking in 1 WATER. You can think of it this way: (All the WOOD I've <b>ever</b> burned / my WATER <b>locked-in</b>) must be 50 times greater than (<b>global</b> burned WOOD of <b>only</b> users that are <b>currently</b> locked-in / <b>global</b> WATER <b>locked-in</b>)</li>\r\n            <li><b>The bonuses are multiplicative</b>: So you can get up to 500x WOOD growth rate. It is suggested to get max 500x multiplicative rate IF POSSIBLE at time of collecting WOOD.</li>\r\n            </ul>\r\n            <h2>The most efficient way to Cash-in WOOD at any time is:</h2>\r\n            <ol><li>Get 10x time bonus (3 weeks after locking).</li><li>Before cashing-in, make sure you burn as much WOOD as possible to get to max 50x burn bonus. Bonuses are calculated at the time of Cash-In.</li></ol>\r\n            \r\n      \r\n          </h3>\r\n        </div></Card>\r\n      </Modal>\r\n    </>\r\n  );\r\n};","import React from \"react\";\r\nimport { Button, Card, Row, Col } from \"antd\";\r\nimport {\r\n  CoreValues,\r\n  TokenSpecs,\r\n  UseCases,\r\n  DashboardOverview,\r\n  MintingBonuses,\r\n  LockinMore,\r\n  EconomicModel,\r\n} from \"../docs\";\r\n\r\nexport default function FooterContent({ _ }) {\r\n  return (\r\n    <Card style={{ backgroundColor: \"black\" }}>\r\n      <div>\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            Community\r\n          </Col>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            Tokens\r\n          </Col>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            Menu\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://twitter.com/waterwoodmoney\" type=\"link\">\r\n              Twitter\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x3c73799db546e98f23f738ea0871b6ced71d873a&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              type=\"link\"\r\n            >\r\n              Buy WATER\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" href=\"/\" type=\"link\">\r\n              Home\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://discord.gg/Z2KESHVrt3\" type=\"link\">\r\n              Discord\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\"\r\n              type=\"link\"\r\n            >\r\n              Buy WOOD\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" href=\"/dashboard\" type=\"link\">\r\n              Dashboard\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://medium.com/@waterwood.finance\" type=\"link\">\r\n              Medium\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://bscscan.com/token/0x3c73799db546e98f23f738ea0871b6ced71d873a\"\r\n              type=\"link\"\r\n            >\r\n              WATER contract\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n          <Button rel=\"noopener noreferrer\" href=\"/help\" type=\"link\">\r\n              Help\r\n            </Button>\r\n           \r\n          </Col>\r\n        </Row>\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://coinmarketcap.com\" type=\"link\">\r\n              CoinMarketCap\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://bscscan.com/token/0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c\"\r\n              type=\"link\"\r\n            >\r\n              WOOD contract\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}>\r\n             {/* <Button rel=\"noopener noreferrer\" href=\"/about\" type=\"link\">\r\n              About\r\n            </Button> */}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n      </div>\r\n      <br></br>  <br></br>\r\n\r\n{/* ----------------------------- */}\r\n\r\n      <div>\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            Helpdesk\r\n          </Col>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            Security\r\n          </Col>\r\n          <Col style={{ color: \"white\", paddingTop: 0 }} span={8}>\r\n            {/* Legal */}\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <CoreValues />\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/Datamine-Crypto/white-paper/blob/master/audits/SlowMist%20-%20Smart%20Contract%20Security%20Audit%20Report%20-%20FluxToken.pdf\"\r\n              type=\"link\"\r\n            >\r\n              Audit Report\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <MintingBonuses />\r\n          </Col>\r\n          <Col span={8}>\r\n            <Button\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://github.com/Datamine-Crypto/white-paper/blob/master/docs/datamine-smart-contracts.md\"\r\n              type=\"link\"\r\n            >\r\n              Whitepaper\r\n            </Button>\r\n          </Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <TokenSpecs />\r\n          </Col>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n\r\n        <Row style={{ textAlign: \"center\" }}>\r\n          <Col span={8}>\r\n            <DashboardOverview />\r\n          </Col>\r\n          <Col span={8}></Col>\r\n          <Col span={8}></Col>\r\n        </Row>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div style={{ color: \"white\", paddingTop: 25 }}>Copyright WaterWood 2021</div>\r\n    </Card>\r\n  );\r\n}\r\n","import { StaticJsonRpcProvider, Web3Provider } from \"@ethersproject/providers\";\r\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\r\nimport { Alert } from \"antd\";\r\nimport { useUserAddress } from \"eth-hooks\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport Web3Modal from \"web3modal\";\r\nimport {\r\n  Account, APYInfo, DownloadMetamask, EcosystemInfo, ENABLE,\r\n  GrowWOOD, Loader, Multipliers, TokenInfo\r\n} from \"../components\";\r\nimport {STYLE, INFURA_ID, NETWORK, NETWORKS } from \"../constants\";\r\nimport { receiveArray, receiveArrayNumberElement, receiveBalance, Transactor } from \"../helpers\";\r\nimport {\r\n  useBalance,\r\n  useContractReader,\r\n  // useExchangePrice,\r\n  useExternalContractLoader,\r\n  useGasPrice,\r\n  useUserProvider\r\n} from \"../hooks\";\r\n\r\nconst targetNetwork = NETWORKS.bsc; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\r\n\r\nconst ethereumProvider = new StaticJsonRpcProvider(NETWORKS.mainnet.rpcUrl);\r\nconst bscProvider = new StaticJsonRpcProvider(NETWORKS.bsc.rpcUrl);\r\nconst localProvider = new StaticJsonRpcProvider(targetNetwork.rpcUrl);\r\nconst mainnetProvider = bscProvider; // && localProvider._network ? localProvider : bscProvider;\r\n\r\nconst addressWOODContract = targetNetwork.wood_address;\r\nconst addressWATERContract = targetNetwork.water_address;\r\n\r\n// 🔭 block explorer URL\r\nconst blockExplorer = targetNetwork.blockExplorer;\r\n\r\n/*\r\n  Web3 modal helps us \"connect\" external wallets:\r\n*/\r\nconst web3Modal = new Web3Modal({\r\n  // network: \"mainnet\", // optional\r\n  cacheProvider: true, // optional\r\n  providerOptions: {\r\n    walletconnect: {\r\n      package: WalletConnectProvider, // required\r\n      options: {\r\n        infuraId: INFURA_ID,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst logoutOfWeb3Modal = async () => {\r\n  await web3Modal.clearCachedProvider();\r\n  setTimeout(() => {\r\n    window.location.reload();\r\n  }, 1);\r\n};\r\n\r\nexport default function Dashboard() {\r\n  const [injectedProvider, setInjectedProvider] = useState();\r\n\r\n  // Prices as of 30/6/2021\r\n  const priceBNB = 290.71;\r\n  const priceWATER = 0.000171916;\r\n  const priceWOOD = 0.0000176927;\r\n  // const price = useExchangePrice(targetNetwork, bscProvider);\r\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\r\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\r\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\r\n  const userProvider = useUserProvider(injectedProvider, localProvider);\r\n  const address = useUserAddress(userProvider);\r\n\r\n  // You can warn the user if you would like them to be on a specific network\r\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\r\n  const userChainId = userProvider && userProvider._network && userProvider._network.chainId;\r\n\r\n  // The transactor wraps transactions and provides notificiations\r\n  const tx = Transactor(userProvider, gasPrice);\r\n  const tx_without_notifications = Transactor(userProvider, gasPrice, false, false);\r\n\r\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\r\n  const yourLocalBalance = useBalance(localProvider, address);\r\n\r\n  // Just plug in different 🛰 providers to get your balance on different chains:\r\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\r\n\r\n  const customContractWOOD = useExternalContractLoader(localProvider, addressWOODContract, targetNetwork.wood_abi);\r\n\r\n  const customContractWATER = useExternalContractLoader(localProvider, addressWATERContract, targetNetwork.water_abi);\r\n\r\n  const totalSupplyWATER = receiveBalance(useContractReader({ 1: customContractWATER }, 1, \"totalSupply\"));\r\n\r\n  const totalSupplyWOOD = receiveBalance(useContractReader({ 1: customContractWOOD }, 1, \"totalSupply\"));\r\n\r\n  const lockedAddressInfo =\r\n    receiveArray(useContractReader({ 1: customContractWOOD }, 1, \"addressLocks\", [address])) || \"    \";\r\n\r\n  const lockedInWATER = receiveArrayNumberElement(0, lockedAddressInfo);\r\n  const burnedWOOD = receiveArrayNumberElement(1, lockedAddressInfo);\r\n  const firstLockInBlock = parseInt(lockedAddressInfo[2].hex);\r\n  const lastMintBlockNumber = parseInt(lockedAddressInfo[3].hex);\r\n\r\n  const addressInfo =\r\n    receiveArray(useContractReader({ 1: customContractWOOD }, 1, \"getAddressDetails\", [address])) || \"       \";\r\n\r\n  const lastBlockNumber = parseInt(addressInfo[0].hex);\r\n  const WOODBalance = receiveArrayNumberElement(1, addressInfo);\r\n  const WOODmintAmount = receiveArrayNumberElement(2, addressInfo);\r\n  const timeMultiplier = parseInt(addressInfo[3].hex) / 10 ** 4;\r\n  const burnMultiplier = parseInt(addressInfo[4].hex) / 10 ** 4;\r\n  const globalLockedamount = receiveArrayNumberElement(5, addressInfo);\r\n  const globalBurnedamount = receiveArrayNumberElement(6, addressInfo);\r\n\r\n  const addressTokenInfo = receiveArray(\r\n    useContractReader({ 1: customContractWOOD }, 1, \"getAddressTokenDetails\", [address]) || \"     \",\r\n  );\r\n\r\n  const isWOODOperator = addressTokenInfo[1];\r\n  const WATERBalance = receiveArrayNumberElement(2, addressTokenInfo);\r\n  const myRatio = parseInt(addressTokenInfo[3].hex) / 10 ** 10;\r\n  const globalRatio = parseInt(addressTokenInfo[4].hex) / 10 ** 10;\r\n\r\n  const signer = userProvider.getSigner();\r\n\r\n  const _ = {\r\n    address: address,\r\n    addressWATERContract: addressWATERContract,\r\n    addressWOODContract: addressWOODContract,\r\n    blockExplorer: blockExplorer,\r\n    burnMultiplier: burnMultiplier,\r\n    burnedWOOD: burnedWOOD,\r\n    customContractWATER: customContractWATER,\r\n    customContractWOOD: customContractWOOD,\r\n    ethereumProvider: ethereumProvider,\r\n    firstLockInBlock: firstLockInBlock,\r\n    gasPrice: gasPrice,\r\n    globalBurnedamount: globalBurnedamount,\r\n    globalLockedamount: globalLockedamount,\r\n    globalRatio: globalRatio,\r\n    injectedProvider: injectedProvider,\r\n    isWOODOperator: isWOODOperator,\r\n    lastBlockNumber: lastBlockNumber,\r\n    lastMintBlockNumber: lastMintBlockNumber,\r\n    localChainId: localChainId,\r\n    localProvider: localProvider,\r\n    lockedInWATER: lockedInWATER,\r\n    mainnetProvider: mainnetProvider,\r\n    myRatio: myRatio,\r\n    priceBNB: priceBNB,\r\n    priceWATER: priceWATER,\r\n    priceWOOD: priceWOOD,\r\n    signer: signer,\r\n    STYLE:STYLE,\r\n    timeMultiplier: timeMultiplier,\r\n    totalSupplyWATER: totalSupplyWATER,\r\n    totalSupplyWOOD: totalSupplyWOOD,\r\n    tx: tx,\r\n    tx_without_notifications: tx_without_notifications,\r\n    userChainId: userChainId,\r\n    userProvider: userProvider,\r\n    WATERBalance: WATERBalance,\r\n    WOODBalance: WOODBalance,\r\n    WOODmintAmount: WOODmintAmount,\r\n    yourLocalBalance: yourLocalBalance,\r\n    yourMainnetBalance: yourMainnetBalance,\r\n  };\r\n\r\n  let networkDisplay = \"\";\r\n  if (localChainId && userChainId && localChainId !== userChainId) {\r\n    const networkLocal = NETWORK(localChainId);\r\n    if (userChainId === 1337 && localChainId === 31337) {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 2, position: \"fixed\", right: 0, top: 45, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network ID\"\r\n            description={\r\n              <div>\r\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\r\n                HardHat.\r\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      networkDisplay = (\r\n        <div style={{ zIndex: 22, position: \"fixed\", right: 0, top: 45, padding: 16 }}>\r\n          <Alert\r\n            message=\"⚠️ Wrong Network\"\r\n            description={\r\n              <div>\r\n                {/* You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"} */}\r\n                You need to be on <b>{networkLocal && networkLocal.name}</b>.\r\n              </div>\r\n            }\r\n            type=\"error\"\r\n            closable={false}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    networkDisplay = (\r\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\r\n        {/* {targetNetwork.name} */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const loadWeb3Modal = useCallback(async () => {\r\n    const provider = await web3Modal.connect();\r\n    setInjectedProvider(new Web3Provider(provider));\r\n  }, [setInjectedProvider]);\r\n\r\n  useEffect(() => {\r\n    if (web3Modal.cachedProvider) {\r\n      loadWeb3Modal();\r\n    }\r\n  }, [loadWeb3Modal]);\r\n\r\n  const [isChecked, setisChecked] = useState(false);\r\n  const [isEnabled, setisEnabled] = useState(false);\r\n  if (customContractWATER && !isEnabled)\r\n    tx_without_notifications(customContractWATER.connect(signer)[\"isOperatorFor\"](addressWOODContract, address)).then(\r\n      res => {\r\n        setisChecked(true);\r\n        setisEnabled(res);\r\n      },\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      {networkDisplay}\r\n\r\n      {!(localChainId && userChainId) || localChainId !== userChainId ? (\r\n        <Loader />\r\n      ) : !injectedProvider ? (\r\n      //   <Card><div>\r\n      //   <div style={{  margin: 24 }}>\r\n      //   <Account\r\n      //     // typeB={\"link\"}\r\n      //     address={address}\r\n      //     ensProvider={ethereumProvider}\r\n      //     web3Modal={web3Modal}\r\n      //     loadWeb3Modal={loadWeb3Modal}\r\n      //     logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n      //   /> <div style={{align:\"center\"}}>{\" \"}or{\" \"}</div>\r\n      //     {\r\n      //       <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://metamask.io/download\">\r\n      //         download Metamask\r\n      //       </Button>\r\n      //     }\r\n      //   </div>\r\n      // </div></Card> \r\n      <DownloadMetamask _={_}/>\r\n      ) : (\r\n        <div style={{}}>\r\n          {!isChecked && !isEnabled ? <Loader /> : !isEnabled && isChecked ? <ENABLE _={_} /> : <GrowWOOD _={_} />}\r\n        </div>\r\n      )}\r\n      <APYInfo _={_} />\r\n      <Multipliers _={_} />\r\n      <TokenInfo _={_} />\r\n      <EcosystemInfo _={_} />\r\n      <div style={{ zIndex: 1, position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n        <Account\r\n          // type={\"primary\"}\r\n          address={address}\r\n          ensProvider={ethereumProvider}\r\n          web3Modal={web3Modal}\r\n          loadWeb3Modal={loadWeb3Modal}\r\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n/* eslint-disable */\r\nwindow.ethereum &&\r\n  window.ethereum.on(\"chainChanged\", _chainId => {\r\n    web3Modal.cachedProvider &&\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1);\r\n  });\r\n\r\nwindow.ethereum &&\r\n  window.ethereum.on(\"accountsChanged\", _accounts => {\r\n    web3Modal.cachedProvider &&\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 1);\r\n  });\r\n/* eslint-enable */\r\n","import axios from \"axios\";\r\nimport { usePoller } from \"eth-hooks\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function useGasPrice(targetNetwork, speed) {\r\n  const [gasPrice, setGasPrice] = useState();\r\n  const loadGasPrice = async () => {\r\n    if (targetNetwork.gasPrice) {\r\n      setGasPrice(targetNetwork.gasPrice);\r\n    } else {\r\n      axios\r\n        .get(\"https://ethgasstation.info/json/ethgasAPI.json\")\r\n        .then(response => {\r\n          const newGasPrice = response.data[speed || \"fast\"] * 100000000;\r\n          if (newGasPrice !== gasPrice) {\r\n            setGasPrice(newGasPrice);\r\n          }\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n  };\r\n\r\n  usePoller(loadGasPrice, 39999);\r\n  return gasPrice;\r\n}\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport {\r\n  CaretRightFilled,\r\n  CaretRightOutlined,\r\n  // ClockCircleOutlined,\r\n  // DownOutlined,\r\n  FallOutlined,\r\n  // PoweroffOutlined,\r\n  RiseOutlined,\r\n} from \"@ant-design/icons\";\r\n// import { UrlJsonRpcProvider } from \"@ethersproject/providers\";\r\nimport { Button, Card, Divider, Popover, Table } from \"antd\";\r\nimport React from \"react\";\r\nimport LazyLoad from \"react-lazyload\";\r\nimport { STYLEHOME } from \"../constants\";\r\nimport {DisplayLottie} from \"../components\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"\",\r\n    dataIndex: \"feature\",\r\n    key: \"feature\",\r\n    // align:\"center\",\r\n    render: text => <p style={{ color: \"#000000\" }}>{text}</p>,\r\n  },\r\n  {\r\n    title: <img width=\"108\" heigth=\"108\" src=\"pics/logo_coins_water_large_square_216_reduced.png\"></img>,\r\n    key: \"WATER\",\r\n    dataIndex: \"WATER\",\r\n    align: \"center\",\r\n    render: text => <p style={{ \r\n      // color: \"#1890ff\"\r\n      // color: \"#0071bd\"\r\n      // color:\"#003660\"\r\n      color: \"#2a8ae2\"\r\n      // color: \"#2082dc\"\r\n     }}>{text}</p>,\r\n  },\r\n  {\r\n    title: <img width=\"108\" heigth=\"108\" src=\"pics/logo_coins_wood_large_square_216_reduced.png\"></img>,\r\n    key: \"WOOD\",\r\n    dataIndex: \"WOOD\",\r\n    align: \"center\",\r\n    render: text => <p style={{ \r\n      // color: \"#fa8c16\"\r\n      // color:\"#513418\"\r\n      // color:\"#3d280a\"\r\n      color:\"#a9794d\"\r\n     }}>{text}</p>,\r\n  },\r\n];\r\n\r\n// const columns = [\r\n//   {\r\n//     title: \"\",\r\n//     dataIndex: \"feature\",\r\n//     key: \"feature\",\r\n//     // align:\"center\",\r\n//     render: text => <p style={{ color: \"#000000\" }}>{text}</p>,\r\n//   },\r\n//   {\r\n//     title: <img width=\"108\" heigth=\"108\" src=\"pics/logo_coins_water_large_square_216_reduced.png\"></img>,\r\n//     key: \"WATER\",\r\n//     dataIndex: \"WATER\",\r\n//     align: \"center\",\r\n//     render: text => <p\r\n//     style={{\r\n//       // color: \"#1890ff\"\r\n//       // color:\"#0071bd\"\r\n//       // color:\"#063c61\"\r\n//       color:\"#0086cc\"\r\n//      }}>{text}</p>,\r\n//   },\r\n//   {\r\n//     title: <img width=\"108\" heigth=\"108\" src=\"pics/logo_coins_wood_large_square_216_reduced.png\"></img>,\r\n//     key: \"WOOD\",\r\n//     dataIndex: \"WOOD\",\r\n//     align: \"center\",\r\n//     render: text => <p style={{ color: \"#815b37\" }}>{text}</p>,\r\n//   },\r\n// ];\r\n\r\nconst data = [\r\n  {\r\n    feature: \"Official Name\",\r\n\r\n    WATER: <b>WATER</b>,\r\n    WOOD: <b>WOOD</b>,\r\n  },\r\n  {\r\n    feature: \"Total Supply\",\r\n\r\n    WATER: \"Fixed\",\r\n    WOOD: \"Unlimited\",\r\n  },\r\n\r\n  {\r\n    feature: \"Start Supply\",\r\n\r\n    WATER: \"1,386,000,000 WATER\",\r\n    WOOD: \"0 WOOD\",\r\n  },\r\n  {\r\n    feature: \"Token Source\",\r\n\r\n    WATER: \"Minted at smart contract creation\",\r\n    WOOD: \"Minted by locking-in WATER tokens\",\r\n  },\r\n  {\r\n    feature: \"Key Feature\",\r\n\r\n    WATER: \"Lock-To-Mint Smart Contract\",\r\n    WOOD: \"Global Burn Supply / Demand\",\r\n  },\r\n\r\n  {\r\n    feature: \"Primary Utility\",\r\n\r\n    WATER: \"Incentivized Cold Storage\",\r\n    WOOD: \"On-Chain Mint & Burn Mechanism\",\r\n  },\r\n  {\r\n    feature: \"Technology\",\r\n\r\n    WATER: \"Standard ERC-777 (ERC-20 and BEP-20 compatible)\",\r\n    WOOD: \"Advanced ERC-777 (ERC-20 and BEP-20 compatible)\",\r\n  },\r\n  {\r\n    feature: \"Forked from\",\r\n\r\n    WATER: \"Ethereum Datamine DAM Token (exact fork except for coin supply)\",\r\n    WOOD: \"Ethereum Datamine Flux Token (exact fork with improved time and burn multipliers)\",\r\n  },\r\n  {\r\n    feature: \"Professional Audits\",\r\n\r\n    WATER: \"SlowMist Security\",\r\n    WOOD: \"SlowMist Security\",\r\n  },\r\n\r\n  // {\r\n  //   feature: \"Smart Contract Address\",\r\n\r\n  //   WATER: \"0x3c73799db546e98f23f738ea0871b6ced71d873a\",\r\n  //   WOOD: \"0x5dfd107dab2a10b5034601fe26b71b3b4d20e64c\",\r\n  // },\r\n];\r\n\r\n// const vheigthParam = window.innerHeight - 65;\r\n\r\nexport default function Home({w,h}) {\r\n\r\n\r\n\r\n  return (\r\n    // <div style={{ border: \"1px solid #cccccc\", padding: 16, marginTop: 64, width: \"50%\", transform: \"translate(166px,0%)\", marginLeft: \"20%\"}}>\r\n    <div>\r\n      <b>\r\n        {/* <div style={{ transform: \"translate(12.5%, 0%)\", width: \"80%\" }}> */}\r\n        <div>\r\n          <Card\r\n            style={{\r\n              // \"background-image\": 'url(\"/pics/wave-haikei.svg\")',\r\n              // \"background-repeat\": \"no-repeat\",\r\n              // \"backgroundPositionX\":\"right\",\r\n              // \"backgroundPositionY\":\"bottom\",\r\n              // \"backgroundSize\":\"100%\",\r\n              // height: vheigthParam,\r\n              // \"border-radius\": \"50px\",\r\n              paddingTop: 40,\r\n              paddingBottom: 65,\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            {/* <font size=\"164\">Unstoppable Demand Meets Immovable Supply</font> */}\r\n            <img\r\n              width=\"108\"\r\n              heigth=\"108\"\r\n              style={{ \"vertical-align\": \"top\" }}\r\n              src=\"/pics/logo_coins_woodwater_large_square_216_reduced.png\"\r\n            ></img>\r\n            <b>\r\n              <div style={{ display: \"inline\", \"white-space\": \"nowrap\", fontSize: 60, margin: 0 }}> WATERWOOD </div>\r\n            </b>\r\n            <div style={{ paddingTop: 20, fontSize: \"1.6rem\", fontWeight: 400 }}>\r\n              <font style={{}}>\r\n                {\" \"}\r\n                An <b>AUDITED</b> dual coin ecosystem\r\n                <br /> where<b> WATER</b> is used to generate <b>WOOD</b> as dividends\r\n              </font>\r\n            </div>\r\n            {/* <font size=\"32\">Two coins called WATER and WOOD. Lock WATER to generate WOOD as dividends</font> */}\r\n            {/* <h2 style={{ margin: 15 }}>Make money, eyes closed, by growing WOOD and recycling WATER </h2> */}\r\n            <h3></h3>\r\n            <Button\r\n              size=\"large\"\r\n              rel=\"noopener noreferrer\"\r\n              onClick={() => {\r\n                window.open(\r\n                  \"https://exchange.pancakeswap.finance/#/swap?outputCurrency=0x3c73799db546e98f23f738ea0871b6ced71d873a&inputCurrency=0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\",\r\n                );\r\n              }}\r\n              style={{ margin: 26 }}\r\n              icon={<CaretRightFilled />}\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n            >\r\n              <b style={{ letterSpacing: 1 }}>Buy WATER Tokens</b>\r\n            </Button>\r\n            <Button\r\n              size=\"large\"\r\n              rel=\"noopener noreferrer\"\r\n              onClick={() => {\r\n                window.location = \"/dashboard\";\r\n              }}\r\n              style={{ margin: 26 }}\r\n              icon={<CaretRightOutlined />}\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n            >\r\n              <b style={{ letterSpacing: 1 }}>Go to Dashboard</b>\r\n            </Button>\r\n            <div>\r\n              <embed></embed>\r\n            </div>\r\n            <Popover\r\n              content={\"WaterWood was inspired by Ethereum project Datamine , we show here their Whitepaper\"}\r\n              placement=\"bottomRight\"\r\n              trigger=\"hover\"\r\n            >\r\n              <Button\r\n                type=\"link\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href=\"https://github.com/Datamine-Crypto/white-paper/blob/master/docs/datamine-smart-contracts.md\"\r\n              >\r\n                View Whitepaper{\" \"}\r\n              </Button>\r\n            </Popover>\r\n            <Button type=\"link\" rel=\"noopener noreferrer\" href=\"/help\">\r\n              Help & knowledge base{\" \"}\r\n            </Button>{\" \"}\r\n            <Popover\r\n              content={\"WaterWood smart contracts are forked from Ethereum Datamine's, we show here their audit\"}\r\n              placement=\"bottomRight\"\r\n              trigger=\"hover\"\r\n            >\r\n              <Button\r\n                type=\"link\"\r\n                rel=\"noopener noreferrer\"\r\n                target=\"_blank\"\r\n                href=\"https://github.com/Datamine-Crypto/white-paper/blob/master/audits/SlowMist%20-%20Smart%20Contract%20Security%20Audit%20Report%20-%20FluxToken.pdf\"\r\n              >\r\n                View security audit{\" \"}\r\n              </Button>\r\n            </Popover>\r\n            {/* <div style={{ height: { vheigthParam }, zIndex: -1 }}>\r\n              <img height=\"100%\" width=\"100%\" src=\"/pics/wave-haikei.svg\" alt=\"Watery Water\"></img>\r\n            </div> */}\r\n          </Card>\r\n\r\n          <Card\r\n            style={{\r\n              \"background-color\": STYLEHOME.COLORCARD[0],\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            <div align=\"center\">\r\n              {/* <Divider orientation=\"left\" style={{  }}>How does it work?</Divider> */}\r\n              {/* <br></br> */}\r\n\r\n              <b>\r\n                <b>\r\n                  <div>\r\n                    <font size=\"164\"> Make Money every 3 seconds</font>\r\n                  </div>\r\n                </b>\r\n              </b>\r\n\r\n              {/* <p>When you lock-in WATER, you start receiving WOOD. </p> */}\r\n              <h2 style={{ maxWidth: 650 }}>\r\n                <p>\r\n                  Every <b>3 seconds</b>, you generate <b>0.00000001 WOOD</b> for each <b>1 WATER</b> locked-in.\r\n                  {/* Every 3 seconds, a small multiplier generates 0.00000001 WOOD for each WATER locked-in.  */}\r\n                  {/* You can UNLOCK your WATER at any time. */}\r\n                </p>\r\n              </h2>\r\n            </div>\r\n          </Card>\r\n          <Card\r\n            style={{\r\n              // \"background-image\": 'url(\"/pics/blurry-gradient-haikei.svg\")',\r\n              // \"background-repeat\": \"no-repeat\",\r\n              // \"backgroundPositionX\":\"right\",\r\n              // \"backgroundPositionY\":\"bottom\",\r\n              // \"backgroundSize\":\"100%\",\r\n\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            <div align=\"center\">\r\n              <b>\r\n                <b>\r\n                  <div>\r\n                    <font size=\"164\"> Bonuses up to 500x</font>\r\n                  </div>\r\n                </b>\r\n              </b>\r\n              <h2 style={{ maxWidth: 420 }}>\r\n                {/* <p>WOOD can be multiplied (up to 500x) by Bonuses:</p> */}\r\n                <p>\r\n                  A <b> 10x Time Bonus</b> and up to <b> 50x Burn Bonus</b> that cumulate to <b>500x</b>.\r\n                  {/* 1. A <b>Time Bonus</b> that gradually increases to <b>10x</b> within the first 3 weeks. */}\r\n                  {/* Then stays at 10x until you unlock your WATER. */}\r\n                  {/* A small multiplier of 0.00000001 WOOD is generated every 3 seconds for each WATER you recycle into the ecosystem. */}\r\n                  {/* By burning WOOD If you wait 17 days, your time multiplier will reach it's maximum of 10x, You can increase your multiplier 500x by cumulating Time Multiplier (10x) and Burn Multiplier (50x). You just need to lock your WATER r Time multiplier increases during the first 17 days and stays  */}\r\n                  {/* When you burn WOOD, you increase\r\n                  your Burn Multiplier (in nature, burning trees is a healthy and ecological way to grow higher and\r\n                  stronger trees). So burning is like planting new trees.{\" \"} */}\r\n                </p>\r\n              </h2>\r\n              <br></br>\r\n              <h3>\r\n                <p>\r\n                  {/* Your Burn Multiplier depends on the Global Burn Ratio see our{\" \"} */}\r\n                  {/* <a href=\"/help\">help and knowledge base for more details</a>.  */}\r\n                  {/* 3. <b>Time and Burn Bonuses</b> cumulate to <b>500x</b> */}\r\n                  {/* To see it in real-time  */}\r\n                  {/* Hit the  */}\r\n\r\n                  {/* to start. */}\r\n                  {/* It's fun, ecological, and makes money\r\n                every 3 seconds. */}\r\n                </p>\r\n              </h3>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <br></br>\r\n              <div align=\"center\">\r\n                {/* <Divider orientation=\"left\" style={{  }}>What is WATERWOOD?</Divider> <br></br> */}\r\n\r\n                <b>\r\n                  <b>\r\n                    <div>\r\n                      {/* <font size=\"164\">More than 500% APY Without Inflation</font> */}\r\n                      <font size=\"164\">540% APY, NO INFLATION</font>\r\n                    </div>\r\n                  </b>\r\n                </b>\r\n                {/* WATERWOOD is t */}\r\n                <h2 style={{ maxWidth: 850 }}>\r\n                  The first Cryptocurrency to produce <b>NEGATIVE INFLATION</b> while generating{\" \"}\r\n                  <b>APY higher than 500%</b>. With <b>No Central Authority</b> involved.\r\n                  {/* Both APY and Inflation are determined by the PEOPLE, according to the law of offer and demand. */}\r\n                </h2>\r\n                {/* <br></br>\r\n              <h3>\r\n                <p>\r\n                  WATER has a fixed supply: 1,386,000,000 coins, representing 1,386,000,000 km<sup>3</sup> of water on\r\n                  planet Earth. By Locking-in WATER, you generate WOOD. */}\r\n                {/* The quantity of water has always been the same since Earth was formed */}\r\n                {/* (that is essential for life, and water that represents money in many cultures) */}\r\n                {/* .. WATER has a\r\n                fixed supply to avoid inflation. */}\r\n                {/* WATER is used to grow WOOD. */}\r\n                {/* </p>\r\n                <p>\r\n                  WOOD has an infinite supply, however, most WOOD is burnt by our users to increase APY. Thanks to burn Bonuses, your APY multiplies up to 500x: */}\r\n                {/* (like channeling WATER towards the trees */}\r\n                {/* of a forest).  */}\r\n                {/* </p>{\" \"}\r\n              </h3> */}\r\n\r\n                <br></br>\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"large\"\r\n                  style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n                  onClick={() => {\r\n                    window.location = \"/dashboard\";\r\n                  }}\r\n                  shape=\"round\"\r\n                >\r\n                  <b style={{ letterSpacing: 1 }}>Launch App</b>\r\n                </Button>\r\n              </div>\r\n\r\n              <LazyLoad height={200} offset={200} once={true} resize={true}>\r\n                <div align=\"center\"\r\n                 style={{paddingTop:75}}\r\n                 >\r\n                  <figure>\r\n                  <DisplayLottie w={w} h={h}/>\r\n                    {/* <img\r\n                      width=\"100%\"\r\n                      align=\"center\"\r\n                      src=\"/lotties/animation_200.gif\"\r\n                      alt=\"At WaterWood, YES, money grows on Trees!\"\r\n                      srcSet=\"/lotties/animation_200.gif 300w,\r\n                  /lotties/animation_300.gif 500w,\r\n                  /lotties/animation_500.gif 800w,\r\n                  /lotties/animation_640.gif 1000w\"\r\n                    ></img> */}\r\n\r\n                    <figcaption>At WaterWood, YES, money grows on Trees!</figcaption>\r\n                  </figure>\r\n                </div>\r\n              </LazyLoad>\r\n              {/* <lottie-player src=\"lotties/latest/JSON/Tree.json\" background=\"#ffffff\"  speed=\"1\"  style=\"width: 300px; height: 300px;\" hover loop controls autoplay></lottie-player> */}\r\n            </div>\r\n          </Card>\r\n\r\n          <Card\r\n            style={{\r\n              \"background-color\": STYLEHOME.COLORCARD[0],\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            <Divider style={{ marginTop: 0, marginBottom: 40 }} plain>\r\n              Tokenomics\r\n            </Divider>\r\n            <LazyLoad offset={200} once={true} resize={true}>\r\n              <Table pagination={false} columns={columns} dataSource={data} />\r\n            </LazyLoad>\r\n          </Card>\r\n\r\n          <Card\r\n            style={{\r\n              \"background-color\": STYLEHOME.COLORCARD[0],\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            <div align=\"left\" style={{ maxWidth: 80000 }}>\r\n              <div class=\"\">\r\n                <Divider orientation=\"left\" style={{ paddingBottom: 45 }}>\r\n                  Why WATERWOOD?\r\n                </Divider>\r\n                <h2 style={{ fontSize: 35 }}>\r\n                  {\" \"}\r\n                  <b>NEGATIVE INFLATION, CONTROLLED BY THE PEOPLE</b>\r\n                </h2>\r\n                <h3 style={{ fontSize: 25 }}>\r\n                  {\" \"}\r\n                  WATER and WOOD aren't subjected to inflation and are controlled by the people{\" \"}\r\n                </h3>\r\n              </div>{\" \"}\r\n              {/* <br></br> */}\r\n              <p style={{ marginTop: 5, fontWeight: 500 }}>\r\n                WOOD's inflation is determined by offer and demand. Regulation by the market offers invaluable,{\" \"}\r\n                <b>never seen before advantages</b>\r\n                {/* putting the control into people's hands.  */}\r\n                {/* in any money\r\n                systems, including in Defi */}:\r\n              </p>\r\n              {/* <br></br> */}\r\n              <h2 style={{ fontSize: 35 }}>\r\n                <br></br>\r\n                <b>\r\n                  <b>SAFEST APY, CONTROLLED BY MARKET FORCES</b>\r\n                </b>\r\n              </h2>\r\n              <h3 style={{ fontSize: 25 }}>\r\n                APY is Automatically Optimized for Risk vs Reward. The Market takes care of everything\r\n              </h3>\r\n              <p style={{ marginTop: 5, fontWeight: 500 }}>\r\n                WaterWood, is first-in-kind to experiment with a dual coin that combines market wisdom, and swift\r\n                mathematical formulas, only made possible by smart contracts.\r\n                <br />\r\n                {/* WATER is locked-in, it becomes rarer in the market, increasing it's value.</p> */}\r\n                As price and burn ratio are driven by offer and demand, WOOD APY systematically stabilizes at an optimal\r\n                risk/reward ratio. <b>This is a unique innovation</b>, made only possible through decentralized\r\n                blockchain technology.\r\n                {/* Making it more valuable than any other staking, or dividend based DeFi coins\r\n                in the market. A global optima is reached along with liquidity.  */}\r\n              </p>\r\n              {/* <p>\r\n                3. As people realize the unbelievable value of a dual coin system, price of both coins grow\r\n                without being restrained by WOOD generation\r\n              </p>\r\n              <br></br>\r\n              <p>\r\n                View it as WATER is finite on earth, always has the same quantity, is essential to life, and it's value\r\n                increases where it's rare (aka. locking-in WATER)\r\n              </p> */}\r\n              {/* <p>\r\n                WOOD needs WATER to grow, it can grow infinitely, but its quantity is still finite, because it's\r\n                subjected to it's harsh environment (the law of the market) where it gets burned.{\" \"}\r\n              </p> */}\r\n              {/* <br></br> */}\r\n              <h2 style={{ fontSize: 35 }}>\r\n                {\" \"}\r\n                <br></br>\r\n                <b>\r\n                  <b>\r\n                    {/* Secure By Design & Professionally Audited */}\r\n                    SECURE BY DESIGN & PROFESSIONALLY AUDITED\r\n                  </b>\r\n                </b>\r\n              </h2>\r\n              <h3 style={{ fontSize: 25 }}>\r\n                All business logic is executed via Audited Smart Contracts so your funds are safe and secure. No 3rd\r\n                parties are involved in fund movement and transactions are performed on-chain.\r\n              </h3>\r\n              <h2 style={{ fontSize: 35 }}>\r\n                <br></br>\r\n                <b>\r\n                  <b>SELF-PROGRAMMED FOR GROWTH</b>\r\n                </b>\r\n              </h2>\r\n              <h2 style={{ fontSize: 25, paddingBottom: 31 }}>\r\n                A Financial Mechanism that perpetuates stability and growth over time\r\n              </h2>\r\n              <h3>\r\n                <Divider orientation=\"left\" style={{ fontSize: 25, paddingTop: 0, paddingRight: \"60%\" }}>\r\n                  <b> Upward cycle </b>\r\n                  <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n                </Divider>\r\n              </h3>\r\n              {/* <p>\r\n                As people buy WATER. Price goes up<Button type=\"link\" icon={<RiseOutlined />}></Button> People lock-in WATER to generate WOOD dividends. Increasing WATER rarity. Price rises further{\" \"}\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n              <p>\r\n                As people buy WOOD. Price goes up<Button type=\"link\" icon={<RiseOutlined />}></Button> People burn WOOD to increase their Multiplier. Making WOOD rare. Price rises further\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p> */}\r\n              <p style={{ fontSize: 25, fontWeight: 500 }}>\r\n                As people lock-in WATER. WATER increases in rarity. Price goes up\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n              <p style={{ fontSize: 25, fontWeight: 500 }}>\r\n                As people burn WOOD. WOOD increases in rarity. Price goes up\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n              <Divider orientation=\"left\" style={{ fontSize: 25, paddingTop: 0, paddingRight: \"60%\" }} align=\"left\">\r\n                <b> Downward cycle</b> <Button type=\"link\" icon={<FallOutlined />}></Button>\r\n              </Divider>\r\n              <p style={{ fontSize: 25, fontWeight: 500 }}>\r\n                As WATER rises in price, people unlock WATER and sell{\" \"}\r\n                <Button type=\"link\" icon={<FallOutlined />}></Button>\r\n              </p>\r\n              <p style={{ fontSize: 25, fontWeight: 500 }}>\r\n                As WOOD rises in price, people cash-in WOOD in the market\r\n                <Button type=\"link\" icon={<FallOutlined />}></Button>\r\n              </p>\r\n              <Divider orientation=\"left\" style={{ fontSize: 25, paddingTop: 0, paddingRight: \"60%\" }}>\r\n                <b>Steady long-term growth</b>\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </Divider>\r\n              {/* <p>\r\n                Demand for dividend doesn't let prices fall too much. As WATER or WOOD fall in price, people seize the opportunity to buy more, burn and lock-in again.\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n              <p>\r\n                Since more and more people involved in the ecosystem, prices steadily rise in the long-term as more and more people generate dividends\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n              <p>The value of both coins raise steadily while still offering dividends every 3 seconds</p> */}\r\n              <p style={{ fontSize: 25, fontWeight: 500 }}>\r\n                As liquidity comes in, short-term ups and downs self regulate WaterWood APY that reaches a competitive\r\n                rate among all yields in the market, keeping the price of WATER and WOOD increasing as more people join\r\n                in. In the long term, this cycle is healthy, like the ecological cycle of WATER and WOOD in nature.\r\n                <Button type=\"link\" icon={<RiseOutlined />}></Button>\r\n              </p>\r\n            </div>\r\n          </Card>\r\n\r\n          <Card\r\n            style={{\r\n              \"background-color\": STYLEHOME.COLORCARD[0],\r\n              marginTop: STYLEHOME.MARGINCARD.top,\r\n              marginBottom: STYLEHOME.MARGINCARD.bottom,\r\n            }}\r\n          >\r\n            {/* <b>\r\n              <Divider style={{ marginTop: 0, marginBottom: 50 }} plain>\r\n                Timeline\r\n              </Divider>\r\n              <Timeline mode=\"alternate\">\r\n                <Timeline.Item style={{ fontSize: 16 }}> Creation of WATER coin June 8th, 2021</Timeline.Item>\r\n                <Timeline.Item style={{ fontSize: 16 }} color=\"green\">\r\n                  WOOD Token created June 9th, 2021\r\n                </Timeline.Item>\r\n                <Timeline.Item style={{ fontSize: 16 }} dot={<PoweroffOutlined style={{ fontSize: \"16px\" }} />}>\r\n                  Website lauch 2021-06-20\r\n                </Timeline.Item>\r\n\r\n                <Timeline.Item style={{ fontSize: 16 }} color=\"red\">\r\n                  {\" \"}\r\n                  Launch on PancakeSwap: July 2021\r\n                </Timeline.Item>\r\n\r\n                <Timeline.Item style={{ fontSize: 16 }} dot={<ClockCircleOutlined style={{ fontSize: \"16px\" }} />}>\r\n                  Launch on main CEX including Binance: December 2021\r\n                </Timeline.Item>\r\n                <Timeline.Item style={{ fontSize: 16 }} dot={<DownOutlined style={{ fontSize: \"16px\" }} />}>\r\n                  Launch on other EVM compatible blockchains: Q1 2022\r\n                </Timeline.Item>\r\n                <Timeline.Item style={{ fontSize: 16 }} dot={<DownOutlined style={{ fontSize: \"16px\" }} />}>\r\n                  Governance and Tokenomics additions: Q2 2022\r\n                </Timeline.Item>\r\n                <Timeline.Item style={{ fontSize: 16 }} dot={<DownOutlined style={{ fontSize: \"16px\" }} />}>\r\n                  Stabilization of currency dynamics and growth of the economic value: Q3 2022\r\n                </Timeline.Item>\r\n              </Timeline>\r\n            </b> */}\r\n          </Card>\r\n        </div>\r\n      </b>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Card ,Row,Col} from \"antd\";\r\nimport {CoreValues, TokenSpecs, UseCases, DashboardOverview, MintingBonuses, LockinMore,EconomicModel } from \"../docs\";\r\n\r\nexport default function Help() {\r\n  return (\r\n    // <div style={{ transform: \"translate(12.5%, 0%)\", width: \"80%\" }}>\r\n    <div>\r\n      <Card >\r\n        <div align=\"center\">\r\n          <h1 style={{ fontSize: 40 }}>Waterwood Helpdesk</h1>\r\n          <h2 style={{ fontSize: 25 , paddingBottom:35}}>Access the entire WaterWood Ecosystem Knowledge</h2>\r\n\r\n          <Row style={{textAlign :\"center\"}}>\r\n      {/* <Col span={12}><b>Learning the Ecosystem</b></Col>\r\n      <Col span={12}><b>Using the dashboard</b></Col> */}\r\n      {/* <Col span={12}><b></b></Col> */}\r\n    </Row><Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}><CoreValues/></Col>\r\n      <Col span={12}><MintingBonuses/></Col>\r\n      {/* <Col span={12}></Col> */}\r\n    </Row><Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}><TokenSpecs/></Col>\r\n      <Col span={12}><DashboardOverview/></Col>\r\n      <Col span={12}></Col>\r\n    </Row>\r\n    <Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n    </Row>\r\n    <Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n    </Row>\r\n<Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n    </Row><Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n    </Row><Row style={{textAlign :\"center\"}}>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n      <Col span={12}></Col>\r\n    </Row>\r\n          \r\n         \r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\n\r\nimport { Button, Card, Divider } from \"antd\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n              <Card style={{ marginBottom: 0 }}></Card>\r\n\r\n              <Card style={{ marginBottom: 0 }}></Card>\r\n\r\n              <Card style={{ marginBottom: 0 }}></Card>\r\n\r\n              <Card style={{ marginBottom: 0 }}></Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {Route, Switch } from \"react-router-dom\";\r\nimport { FooterContent } from \"../components\";\r\nimport { About, Dashboard, Help, Home } from \"../views\";\r\n\r\n// displays a page header\r\n\r\nexport default function InnerContent({w,h}) {\r\n  return (\r\n   \r\n    <div>\r\n     <Switch>\r\n                <Route exact path=\"/\">\r\n                  <Home w={w} h={h}/>\r\n                </Route>\r\n                {/* <LazyLoad height={200} offset={100} once={true}> */}\r\n                  <Route exact path=\"/dashboard\">\r\n                    {/* <LazyLoad height={200} offset={100} once={true}> */}\r\n                      <Dashboard />\r\n                    {/* </LazyLoad> */}\r\n                  </Route>\r\n                  <Route path=\"/about\">\r\n                    {/* <LazyLoad height={200} offset={100} once={true}> */}\r\n                      <About />\r\n                    {/* </LazyLoad> */}\r\n                  </Route>\r\n                  <Route path=\"/help\">\r\n                    {/* <LazyLoad height={200} offset={100} once={true}> */}\r\n                      <Help />\r\n                    {/* </LazyLoad> */}\r\n                  </Route>\r\n                {/* </LazyLoad> */}\r\n                {/* <Route path=\"/water\">\r\n                  <Contract\r\n                    name=\"Interact with WATER\"\r\n                    customContract={customContractWATER}\r\n                    signer={signer}\r\n                    provider={localProvider}\r\n                    address={address}\r\n                    blockExplorer={blockExplorer}\r\n                  />\r\n                </Route>\r\n                <Route path=\"/wood\">\r\n                  <Contract\r\n                    name=\"Interact with WOOD\"\r\n                    customContract={customContractWOOD}\r\n                    signer={signer}\r\n                    provider={localProvider}\r\n                    address={address}\r\n                    blockExplorer={blockExplorer}\r\n                  />\r\n                </Route> */}\r\n              </Switch>\r\n             \r\n    </div>\r\n  );\r\n}\r\n","import { Card, Button} from \"antd\";\r\nimport React from \"react\";\r\n\r\n// displays a page header\r\n\r\nexport default function DownloadMetamask({_}) {\r\n  return (\r\n    <Card style={{\"background-color\":_.STYLE.COLORCARD[0], marginTop:_.STYLE.MARGINCARD.top,marginBottom:_.STYLE.MARGINCARD.bottom}}><div>\r\n    <div style={{ padding: 16, margin: \"auto\", margin: 64 }}>\r\n      Connect wallet or{\" \"}\r\n      {\r\n        <Button rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://metamask.io/download\">\r\n          download Metamask\r\n        </Button>\r\n      }\r\n    </div>\r\n  </div></Card>\r\n  \r\n  );\r\n}\r\n","\r\nimport React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\n\r\nexport default function LottieAnimation({ lotti, width, height }) {\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: lotti,\r\n    // rendererSettings: {\r\n    //   preserveAspectRatio: \"xMidYMid slice\",\r\n    // },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Lottie options={defaultOptions} height={height} width={width} />\r\n    </div>\r\n  );\r\n};","import React from \"react\";\r\nimport LottieAnimation from \"./LottieAnimation\";\r\nimport home from \"../Lotties/Tree.json\";\r\n\r\nexport default function DisplayLottie({w,h}) {\r\n\r\n  return (\r\n    <div className=\"displayLottie\" style={{ width: \"100%\" }}>\r\n      <LottieAnimation style={{ width: \"100%\" }} lotti={home} height={h} width={w} />\r\n    </div>\r\n  );\r\n}\r\n","import { ControlFilled, HomeFilled, InfoCircleFilled, MenuOutlined } from \"@ant-design/icons\";\r\nimport { Button, Layout, Menu, PageHeader } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import LazyLoad from \"react-lazyload\";\r\nimport { BrowserRouter, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { InnerContent, FooterContent } from \"./components\";\r\n// import { About, Dashboard, Help, Home } from \"./views\";\r\nconst { Header, Sider, Content } = Layout;\r\n\r\nconst DEBUG = 0;\r\n\r\nfunction App() {\r\n  if (DEBUG) {\r\n    console.log();\r\n    // console.log(_);\r\n  }\r\n\r\n  const [route, setRoute] = useState();\r\n  useEffect(() => {\r\n    setRoute(window.location.pathname);\r\n  }, [setRoute]);\r\n\r\n  const responsiveWidth = 1400;\r\n  // const marginResponsive = \"15%\";\r\n  const siderWidth = 290;\r\n  const marginResponsive = Math.max(0, (window.innerWidth - responsiveWidth - siderWidth) / 2);\r\n  // console.log(marginResponsive);\r\n  const [isMobile, setIsMobile] = useState(\r\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n      window.innerWidth < responsiveWidth,\r\n  );\r\n\r\n  const [menuWidth, setMenuWidth] = useState(isMobile || window.innerWidth < responsiveWidth ? 0 : 200);\r\n  // const menuWidth = window.innerWidth > responsiveWidth ? 200 : 0;\r\n\r\n  const [isMobileMenuOpened, setIsMobileMenuOpened] = useState(false);\r\n\r\n  // const [contentStart, setContentStart] = useState(isMobile && !isMobileMenuOpened ? 65 : 0);\r\n\r\n  const [w, setW] = useState(\r\n    window.innerWidth < responsiveWidth ? window.innerWidth - 90 - 90 : window.innerWidth - 200 - 90 - 90,\r\n  );\r\n  const [h, setH] = useState((w * 9) / 16);\r\n\r\n  window.addEventListener(\"resize\", function () {\r\n    setW(isMobileMenuOpened || window.innerWidth >= responsiveWidth? window.innerWidth - 200 - 90 - 90 : window.innerWidth - 90 - 90);\r\n    setH((w * 9) / 16);\r\n    // setIsMobileMenuOpened(false);\r\n    setIsMobile(\r\n      /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\r\n        window.innerWidth < responsiveWidth,\r\n    );\r\n    setMenuWidth(isMobileMenuOpened ? 200 : isMobile || window.innerWidth < responsiveWidth ? 0 : 200);\r\n  });\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Layout>\r\n          <Header style={{ position: \"fixed\", zIndex: 1, width: \"100%\" }}>\r\n            {route === \"/dashboard\" ? (\r\n              \"\"\r\n            ) : (\r\n              // <div style={{ zIndex: 1, position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n              // <Account\r\n              //   address={address}\r\n              //   ensProvider={ethereumProvider}\r\n              //   web3Modal={web3Modal}\r\n              //   loadWeb3Modal={loadWeb3Modal}\r\n              //   logoutOfWeb3Modal={logoutOfWeb3Modal}\r\n              // /></div>\r\n              <div style={{ zIndex: 1, position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  // key=\"loginbutton\"\r\n                  style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\r\n                  onClick={() => {\r\n                    window.location = \"/dashboard\";\r\n                  }}\r\n                >\r\n                  <b style={{ letterSpacing: 1 }}>Launch App</b>\r\n                </Button>\r\n              </div>\r\n            )}{\" \"}\r\n          </Header>\r\n        </Layout>\r\n\r\n        <Layout>\r\n          {isMobile ? (\r\n            isMobileMenuOpened ? (\r\n              <div style={{ zIndex: 1 }}>\r\n                <PageHeader\r\n                  avatar={{ src: \"/pics/logo_coins_woodwater_large_square_64_reduced.png\" }}\r\n                  subTitle=\"WATERWOOD\"\r\n                  extra={[\r\n                    <Button\r\n                      onClick={() => {\r\n                        setMenuWidth(0);\r\n                        setIsMobileMenuOpened(false);\r\n                        setW(window.innerWidth - 90 - 90);\r\n                        setH((w * 9) / 16);\r\n                      }}\r\n                      icon={<MenuOutlined />}\r\n                      type=\"primary\"\r\n                    ></Button>,\r\n                  ]}\r\n                  style={{ cursor: \"pointer\", position: \"fixed\", top: 0 }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div style={{ zIndex: 1 }}>\r\n                <PageHeader\r\n                  extra={[\r\n                    <Button\r\n                      onClick={() => {\r\n                        setW(window.innerWidth - 200 - 90 - 90);\r\n                        setH((w * 9) / 16);\r\n                        setIsMobileMenuOpened(true);\r\n                        setMenuWidth(200);\r\n                        \r\n                      }}\r\n                      icon={<MenuOutlined />}\r\n                      type=\"primary\"\r\n                    ></Button>,\r\n                    // isMobileMenuOpened ? <InnerHeaderMobile/> :\"\"\r\n                  ]}\r\n                  style={{ cursor: \"pointer\", position: \"fixed\", top: 0 }}\r\n                />\r\n              </div>\r\n            )\r\n          ) : (\r\n            <div style={{ zIndex: 1 }}>\r\n              {\" \"}\r\n              <a href=\"/\">\r\n                {\" \"}\r\n                {/* href=\"https://waterwood.network\" >*/}\r\n                <PageHeader\r\n                  avatar={{ src: \"/pics/logo_coins_woodwater_large_square_64_reduced.png\" }}\r\n                  title=\"WATERWOOD\"\r\n                  style={{ cursor: \"pointer\", position: \"fixed\", top: 0 }}\r\n                />\r\n              </a>\r\n            </div>\r\n          )}\r\n          <Sider\r\n            theme=\"light\"\r\n            style={{\r\n              overflow: \"auto\",\r\n              height: \"100vh\",\r\n              position: \"fixed\",\r\n              left: 0,\r\n              width: 200,\r\n            }}\r\n          >\r\n            {/*<Menu style={{ textAlign: \"center\" , position:\"fixed\",  top:0,left: \"50%\", transform: \"translate(-50%, 0%)\", padding: 15}} selectedKeys={[route]} mode=\"horizontal\">*/}\r\n            {menuWidth > 100 ? (\r\n              <Menu\r\n                style={{ fontWeight: 550, fontSize: 15, textAlign: \"left\", marginLeft: 17, marginTop: 65 }}\r\n                selectedKeys={[route]}\r\n                mode=\"vertical\"\r\n              >\r\n                <Menu.Item key=\"/\" icon={<HomeFilled />}>\r\n                  <Link\r\n                    onClick={() => {\r\n                      if (isMobile && isMobileMenuOpened) {\r\n                        setMenuWidth(0);\r\n                        setIsMobileMenuOpened(false);\r\n                      }\r\n                      setRoute(\"/\");\r\n                    }}\r\n                    to=\"/\"\r\n                  >\r\n                    <b style={{ letterSpacing: 1 }}>Home</b>\r\n                  </Link>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"/dashboard\" icon={<ControlFilled />}>\r\n                  <Link\r\n                    onClick={() => {\r\n                      if (isMobile && isMobileMenuOpened) {\r\n                        setMenuWidth(0);\r\n                        setIsMobileMenuOpened(false);\r\n                      }\r\n                      setRoute(\"/dashboard\");\r\n                    }}\r\n                    to=\"/dashboard\"\r\n                  >\r\n                    <b style={{ letterSpacing: 1 }}>Dashboard</b>\r\n                  </Link>\r\n                </Menu.Item>\r\n                {/* <Menu.Item key=\"/about\" icon={<StarFilled />}>\r\n                <Link\r\n                  onClick={() => {if (isMobile &&\r\n                      isMobileMenuOpened){setMenuWidth(0);\r\n                        setIsMobileMenuOpened(false);}\r\n                    setRoute(\"/about\");\r\n                  }}\r\n                  to=\"/about\"\r\n                >\r\n                  <b style={{letterSpacing:1}}>About</b> \r\n                </Link>\r\n              </Menu.Item> */}\r\n                <Menu.Item key=\"/help\" icon={<InfoCircleFilled />}>\r\n                  <Link\r\n                    onClick={() => {\r\n                      if (isMobile && isMobileMenuOpened) {\r\n                        setMenuWidth(0);\r\n                        setIsMobileMenuOpened(false);\r\n                      }\r\n                      setRoute(\"/help\");\r\n                    }}\r\n                    to=\"/help\"\r\n                  >\r\n                    <b style={{ letterSpacing: 1 }}>Help</b>\r\n                  </Link>\r\n                </Menu.Item>\r\n                {/* <Menu.Item key=\"/water\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/water\");\r\n              }}\r\n              to=\"/water\"\r\n            >\r\n              WATER\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/wood\">\r\n            <Link\r\n              onClick={() => {\r\n                setRoute(\"/wood\");\r\n              }}\r\n              to=\"/wood\"\r\n            >\r\n              WOOD\r\n            </Link>\r\n          </Menu.Item> */}\r\n              </Menu>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </Sider>\r\n          <Layout\r\n            className=\"site-layout\"\r\n            style={{ marginLeft: menuWidth, marginTop: 65, paddingLeft: 45, paddingRight: 45 }}\r\n          >\r\n            {window.innerWidth < responsiveWidth ? (\r\n              <Content>\r\n                <InnerContent w={w} h={h} />\r\n              </Content>\r\n            ) : (\r\n              <Content style={{ marginRight: marginResponsive, marginLeft: marginResponsive }}>\r\n                <InnerContent w={w} h={h} />\r\n              </Content>\r\n            )}\r\n            <FooterContent />\r\n            {/* <Footer> */}\r\n\r\n            {/* </Footer> */}\r\n          </Layout>\r\n        </Layout>\r\n\r\n        {/* <ThemeSwitch /> */}\r\n      </div>{\" \"}\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\r\nimport React from \"react\";\r\n// import { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\n// const themes = {\r\n//   dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\r\n//   light: `${process.env.PUBLIC_URL}/light-theme.css`,\r\n \r\n// };\r\n\r\n// const prevTheme = window.localStorage.getItem(\"theme\");\r\n\r\n// const subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\r\n\r\n// const client = new ApolloClient({\r\n//   // uri: subgraphUri,\r\n//   cache: new InMemoryCache(),\r\n// });\r\n\r\nReactDOM.render(<div>\r\n  {/* // <ApolloProvider client={client}> */}\r\n    {/* <ThemeSwitcherProvider themeMap={themes} defaultTheme={ \"light\"}> */}\r\n    {/* <ThemeSwitcherProvider themeMap={themes} defaultTheme={\"dark\"}> */}\r\n      <App />\r\n    {/* </ThemeSwitcherProvider> */}\r\n    </div>,\r\n  // </ApolloProvider>,\r\n  document.getElementById(\"root\"),\r\n);","var map = {\n\t\"./YourContract.abi.js\": 620\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 396;","var map = {\n\t\"./YourContract.bytecode.js\": 621\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 397;","var map = {\n\t\"./YourContract.address.js\": 619\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 618;","module.exports = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\";","module.exports = [\r\n  {\r\n    \"inputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"constructor\"\r\n  },\r\n  {\r\n    \"anonymous\": false,\r\n    \"inputs\": [\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"address\",\r\n        \"name\": \"sender\",\r\n        \"type\": \"address\"\r\n      },\r\n      {\r\n        \"indexed\": false,\r\n        \"internalType\": \"string\",\r\n        \"name\": \"purpose\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"name\": \"SetPurpose\",\r\n    \"type\": \"event\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"newPurpose\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"name\": \"eddd\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [],\r\n    \"name\": \"purpose\",\r\n    \"outputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"stateMutability\": \"view\",\r\n    \"type\": \"function\"\r\n  },\r\n  {\r\n    \"inputs\": [\r\n      {\r\n        \"internalType\": \"string\",\r\n        \"name\": \"newPurpose\",\r\n        \"type\": \"string\"\r\n      }\r\n    ],\r\n    \"name\": \"setPurpose\",\r\n    \"outputs\": [],\r\n    \"stateMutability\": \"nonpayable\",\r\n    \"type\": \"function\"\r\n  }\r\n];","module.exports = \"0x60c0604052601960808190527f4275696c64696e6720556e73746f707061626c6520417070730000000000000060a090815261003e9160009190610051565b5034801561004b57600080fd5b506100f2565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928261008757600085556100cd565b82601f106100a057805160ff19168380011785556100cd565b828001600101855582156100cd579182015b828111156100cd5782518255916020019190600101906100b2565b506100d99291506100dd565b5090565b5b808211156100d957600081556001016100de565b61059f806101016000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063270a85d31461004657806370740aab146100ee578063eb68757f14610046575b600080fd5b6100ec6004803603602081101561005c57600080fd5b81019060208101813564010000000081111561007757600080fd5b82018360208201111561008957600080fd5b803590602001918460018302840111640100000000831117156100ab57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061016b945050505050565b005b6100f66102f6565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610130578181015183820152602001610118565b50505050905090810190601f16801561015d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b805161017e9060009060208401906104c8565b50604080518082018252600e81526d73657420707572706f736520746f60901b60208083019190915260008054845160026001831615610100026000190190921691909104601f810184900484028201840190955284815261023b943394939192918301828280156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b5050505050610384565b60408051338082526020820183815260008054600260001961010060018416150201909116049484018590527f6ea5d6383a120235c7728a9a6751672a8ac068e4ed34dcca2ee444182c1812de94929390929091906060830190849080156102e45780601f106102b9576101008083540402835291602001916102e4565b820191906000526020600020905b8154815290600101906020018083116102c757829003601f168201915b5050935050505060405180910390a150565b6000805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561037c5780601f106103515761010080835404028352916020019161037c565b820191906000526020600020905b81548152906001019060200180831161035f57829003601f168201915b505050505081565b6104a283838360405160240180846001600160a01b031681526020018060200180602001838103835285818151815260200191508051906020019080838360005b838110156103dd5781810151838201526020016103c5565b50505050905090810190601f16801561040a5780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b8381101561043d578181015183820152602001610425565b50505050905090810190601f16801561046a5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529190526020810180516001600160e01b031663fb77226560e01b17905295506104a7945050505050565b505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826104fe5760008555610544565b82601f1061051757805160ff1916838001178555610544565b82800160010185558215610544579182015b82811115610544578251825591602001919060010190610529565b50610550929150610554565b5090565b5b80821115610550576000815560010161055556fea264697066735822122003aadcc4acc37b6cea27ac45daac82f0e337fe2c9b9e7a36be605e4dec744d9064736f6c63430007060033\";","module.exports = [\"YourContract\"];"],"sourceRoot":""}